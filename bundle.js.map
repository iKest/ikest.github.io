{"version":3,"file":"bundle.js","sources":["../src/common/config.js","../src/libs/util.js","../src/libs/imageStore.js","../node_modules/eventemitter3/index.js","../src/framework/SmallMap.js","../src/framework/View.js","../src/framework/GameMap.js","../src/element/Base.js","../src/element/Snake.js","../src/element/Food.js","../src/main.js"],"sourcesContent":["export const MAP_WIDTH = 5000; // map width\nexport const MAP_HEIGHT = 5000; // map height\n\nexport const SPEED = 5; // speed of snake\nexport const BASE_ANGLE = Math.PI * 180; // base angle of snake\n\nexport const MAP_RECT_WIDTH = 200; // map small rect width\nexport const MAP_RECT_HEIGHT = 200; // map small rect height\nexport const TILE_IMG_WIDTH = 200; // tile image width\nexport const TILE_IMG_HEIGHT = 200; // tile image height\n\nexport const SNAKE_IMG_SIZE = 40; // size of snake's image\nexport const SNAKE_LENGTH = 200; // length of snake\n\nexport const INIT_FOOD_COUNT = 2000;\n","export const randomInteger = (min, max) => {\n    let rand = min + Math.random() * (max + 1 - min);\n    rand = Math.floor(rand);\n    return rand;\n};\n\nexport const collision = (dom, dom2, isRect) => {\n    const disX = dom.x - dom2.x;\n    const disY = dom.y - dom2.y;\n    const dw = dom.width + dom2.width;\n\n    if (Math.abs(disX) > dw || Math.abs(disY) > dom.height + dom2.height) {\n        return false;\n    }\n\n    return isRect ? true : Math.hypot(disX, disY) < dw / 2;\n};\n\nexport const getAngle = (x, y) => {\n    let angle = Math.atan(Math.abs(x / y));\n\n    // calculate angle, value is 0-360\n    if (x > 0 && y < 0) {\n        angle = Math.PI - angle;\n    } else if (x < 0 && y < 0) {\n        angle = Math.PI + angle;\n    } else if (x < 0 && y > 0) {\n        angle = Math.PI * 2 - angle;\n    }\n\n    return angle;\n};\n\nexport const rotatePoint = (pivot, point, angle) => {\n    // Rotate clockwise, angle in radians\n    const x = Math.round(\n        Math.cos(angle) * (point.x - pivot.x) - Math.sin(angle) * (point.y - pivot.y) + pivot.x\n    );\n    const y = Math.round(\n        Math.sin(angle) * (point.x - pivot.x) + Math.cos(angle) * (point.y - pivot.y) + pivot.y\n    );\n    return {\n        x,\n        y\n    };\n};\n","import { MAP_RECT_HEIGHT, MAP_RECT_WIDTH, SNAKE_IMG_SIZE } from '../common/config';\nimport { rotatePoint } from './util';\n\nexport const drawPattern = (width, height, ratio = 1) => {\n    const tileImage = document.createElement('canvas');\n    tileImage.width = width * ratio;\n    tileImage.height = height * ratio;\n    const ctx = tileImage.getContext('2d');\n    const colors = ['#eee', '#aaa'];\n    const mrw = MAP_RECT_WIDTH / ratio;\n    const mrh = MAP_RECT_HEIGHT / ratio;\n    for (let x = 0, i = 0; x <= width; x += mrw, i += 1) {\n        for (let y = 0, j = 0; y <= height; y += mrh, j += 1) {\n            const cx = width * ratio - x;\n            const cy = height * ratio - y;\n            const w = cx < mrw ? cx : mrw;\n            const h = cy < mrh ? cy : mrh;\n            ctx.fillStyle = colors[(i + j) % colors.length];\n            ctx.fillRect(x, y, w, h);\n        }\n    }\n    ctx.lineWidth = 3;\n    ctx.strokeRect(0, 0, width * ratio, height * ratio);\n    return tileImage;\n};\n\nexport class SnakeHeader {\n    constructor(ctx, width = SNAKE_IMG_SIZE, height = SNAKE_IMG_SIZE) {\n        this.width = width;\n        this.height = height;\n        this.ctx = ctx;\n        this.angle = 0;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    render(x, y, angle) {\n        const leftTop = {\n            x: x - 0.5 * this.width,\n            y: y - this.height\n        };\n        const rightTop = {\n            x: x + 0.5 * this.width,\n            y: y - this.height\n        };\n        const rightBottom = {\n            x: x + 0.5 * this.width,\n            y\n        };\n        const leftBottom = {\n            x: x - 0.5 * this.width,\n            y\n        };\n        const pivot = {\n            x,\n            y\n        };\n        let rotateLeftTop = rotatePoint(pivot, leftTop, angle);\n        let rotateRightTop = rotatePoint(pivot, rightTop, angle);\n        let rotateRightBottom = rotatePoint(pivot, rightBottom, angle);\n        let rotateLeftBottom = rotatePoint(pivot, leftBottom, angle);\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(rotateLeftTop.x, rotateLeftTop.y);\n        this.ctx.lineTo(rotateRightTop.x, rotateRightTop.y);\n        this.ctx.lineTo(rotateRightBottom.x, rotateRightBottom.y);\n        this.ctx.lineTo(rotateLeftBottom.x, rotateLeftBottom.y);\n        // this.ctx.lineTo(rotateLeftTop.x, rotateLeftTop.y);\n        this.ctx.closePath();\n        this.ctx.fillStyle = 'blue';\n        // this.ctx.shadowOffsetX = 4;\n        this.ctx.shadowOffsetY = 4;\n        // this.ctx.shadowBlur = Math.round(0.7 * 10);\n        this.ctx.shadowColor = 'red';\n        this.ctx.fill();\n        this.ctx.restore();\n\n        leftTop.x = x - 0.5 * this.width + 0.2 * this.width;\n        leftTop.y = y - this.height + 0.2 * this.height;\n\n        rightTop.x = x + 0.5 * this.width - 0.2 * this.width;\n        rightTop.y = y - this.height + 0.2 * this.height;\n\n        rightBottom.x = x + 0.5 * this.width - 0.2 * this.width;\n        rightBottom.y = y - 0.2 * this.height;\n\n        leftBottom.x = x - 0.5 * this.width + 0.2 * this.width;\n        leftBottom.y = y - 0.2 * this.height;\n        rotateLeftTop = rotatePoint(pivot, leftTop, angle);\n        rotateRightTop = rotatePoint(pivot, rightTop, angle);\n        rotateRightBottom = rotatePoint(pivot, rightBottom, angle);\n        rotateLeftBottom = rotatePoint(pivot, leftBottom, angle);\n\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.moveTo(rotateLeftTop.x, rotateLeftTop.y);\n        this.ctx.lineTo(rotateRightTop.x, rotateRightTop.y);\n        this.ctx.lineTo(rotateRightBottom.x, rotateRightBottom.y);\n        this.ctx.lineTo(rotateLeftBottom.x, rotateLeftBottom.y);\n        this.ctx.closePath();\n        this.ctx.fillStyle = 'white';\n        this.ctx.fill();\n        this.ctx.restore();\n    }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export default class SmallMap {\n    constructor(gameMap, margin, radius) {\n        this.gameMap = gameMap;\n        this.margin = margin;\n        this.radius = radius;\n        this.image = document.createElement('canvas');\n\n        this.initImage();\n    }\n\n    initImage() {\n        this.image.width = this.radius * 2;\n        this.image.height = this.radius * 2;\n        this.x = this.gameMap.view.width - this.radius * 2 - this.margin;\n        this.y = this.gameMap.view.height - this.radius * 2 - this.margin;\n        this.mapX = this.x + this.radius / 2;\n        this.mapY = this.y + this.radius / 2;\n        const ctx = this.image.getContext('2d');\n\n        this.smallMapWidth =\n            this.gameMap.width > this.gameMap.height\n                ? this.radius\n                : (this.gameMap.width * this.radius) / this.gameMap.height;\n        this.smallMapHeight =\n            this.gameMap.width > this.gameMap.height\n                ? (this.gameMap.height * this.radius) / this.gameMap.width\n                : this.radius;\n\n        const smallRectX = this.radius - this.smallMapWidth / 2;\n        const smallRectY = this.radius - this.smallMapHeight / 2;\n\n        // draw background\n        ctx.save();\n        ctx.beginPath();\n        ctx.arc(this.radius, this.radius, this.radius - 1, 0, Math.PI * 2);\n        ctx.fillStyle = '#000';\n        ctx.fill();\n\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#fff';\n        ctx.stroke();\n\n        // draw map\n        ctx.fillStyle = '#ccc';\n        ctx.fillRect(smallRectX, smallRectY, this.smallMapWidth, this.smallMapHeight);\n        ctx.restore();\n    }\n\n    render() {\n        // relative ratio\n        const radio = this.smallMapWidth / this.gameMap.paintWidth;\n        const { ctx } = this.gameMap;\n\n        // area and position of window\n        const smallViewX = this.gameMap.view.x * radio + this.mapX;\n        const smallViewY = this.gameMap.view.y * radio + this.mapY;\n        const smallViewW = this.gameMap.view.width * radio;\n        const smallViewH = this.gameMap.view.height * radio;\n\n        ctx.save();\n        ctx.globalAlpha = 0.8;\n        ctx.drawImage(this.image, this.x, this.y);\n\n        // draw window\n        // ctx.strokeStyle = '#fff';\n        // ctx.strokeRect(smallViewX, smallViewY, smallViewW, smallViewH);\n        ctx.fillStyle = '#f00';\n        ctx.fillRect(smallViewX + smallViewW / 2 - 2, smallViewY + smallViewH / 2 - 2, 4, 4);\n\n        ctx.restore();\n    }\n}\n","export default class View {\n    constructor(gameMap, width, height, x = 0, y = 0) {\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n        this.gameMap = gameMap;\n    }\n\n    trace(obj) {\n        this.x = obj.x / this.gameMap.scale - this.width / 2;\n        this.y = obj.y / this.gameMap.scale - this.height / 2;\n    }\n\n    absoluteX(x) {\n        return (x + this.x) * this.gameMap.scale;\n    }\n\n    absoluteY(y) {\n        return (y + this.y) * this.gameMap.scale;\n    }\n\n    relativeX(x) {\n        return x / this.gameMap.scale - this.x;\n    }\n\n    relativeY(y) {\n        return y / this.gameMap.scale - this.y;\n    }\n\n    relativeW(width) {\n        return width / this.gameMap.scale;\n    }\n\n    relativeH(height) {\n        return height / this.gameMap.scale;\n    }\n}\n","import EventEmitter from 'eventemitter3';\nimport { MAP_HEIGHT, MAP_RECT_HEIGHT, MAP_RECT_WIDTH, MAP_WIDTH } from '../common/config';\nimport { drawPattern } from '../libs/imageStore';\nimport SmallMap from './SmallMap';\nimport View from './View';\n\n// Map class\nclass GameMap extends EventEmitter {\n    constructor(canvas, vWidth, vHeight, scale = 1) {\n        super();\n        this.canvas = canvas;\n        this.width = MAP_WIDTH;\n        this.height = MAP_HEIGHT;\n        this.vWidth = vWidth;\n        this.vHeight = vHeight;\n        this.scale = scale;\n        this.canvas.width = vWidth;\n        this.canvas.height = vHeight;\n        this.ctx = this.canvas.getContext('2d');\n        this.paintSizeReset();\n        this.tileImage = drawPattern(MAP_RECT_WIDTH * 8, MAP_RECT_HEIGHT * 8);\n        this.view = new View(this, vWidth, vHeight);\n        this.smallMap = new SmallMap(this, 30, 50);\n    }\n\n    // set scale\n    setScale(scale) {\n        if (this.scale === scale) {\n            return;\n        }\n\n        this.scale = scale < 1 ? 1 : scale;\n        this.paintSizeReset();\n        this.emit('scale_changed');\n    }\n\n    // set toScale for creating animate\n    setToScale(scale) {\n        this.toScale = scale;\n    }\n\n    // relative to scale\n    relative(val) {\n        return val / this.scale;\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.view.width, this.view.height);\n    }\n\n    update(player, callback) {\n        if (this.toScale && this.scale !== this.toScale) {\n            /* const scaleDis = this.toScale - this.scale;\n            if (Math.abs(scaleDis) < 0.01) {\n                this.setScale(this.toScale);\n            } else {\n                this.setScale(this.scale + (this.toScale - this.scale) * 0.1);\n            } */\n\n            this.setScale(this.toScale);\n        }\n\n        this.clear();\n        this.view.trace(player);\n        this.render();\n        callback();\n        this.smallMap.render();\n    }\n\n    // limit element, prevent it moving to outside\n    limit(el) {\n        const element = el;\n        const whalf = (element.width || 1) / 2;\n        if (element.x < whalf) {\n            element.x = whalf;\n        } else if (element.x + whalf > this.width) {\n            element.x = this.width - whalf;\n        }\n\n        const hhalf = (element.height || 1) / 2;\n        if (element.y < hhalf) {\n            element.y = hhalf;\n        } else if (element.y + hhalf > this.height) {\n            element.y = this.height - hhalf;\n        }\n    }\n\n    // render map\n    render() {\n        const { view } = this;\n        const tileWid = this.relative(this.tileImage.width);\n        const tileHei = this.relative(this.tileImage.height);\n        const beginX = view.x < 0 ? -view.x : -view.x % tileWid;\n        const beginY = view.y < 0 ? -view.y : -view.y % tileHei;\n        const endX =\n            view.x + view.width > this.paintWidth\n                ? this.paintWidth - view.x\n                : beginX + view.width + tileWid;\n        const endY =\n            view.y + view.height > this.paintHeight\n                ? this.paintHeight - view.y\n                : beginY + view.height + tileHei;\n\n        for (let x = beginX; x <= endX; x += tileWid) {\n            for (let y = beginY; y <= endY; y += tileHei) {\n                const cx = endX - x;\n                const cy = endY - y;\n                const w = cx < tileWid ? cx : tileWid;\n                const h = cy < tileHei ? cy : tileHei;\n                this.ctx.drawImage(\n                    this.tileImage,\n                    0,\n                    0,\n                    w * this.scale,\n                    h * this.scale,\n                    x,\n                    y,\n                    w,\n                    h\n                );\n            }\n        }\n    }\n\n    paintSizeReset() {\n        this.paintWidth = this.relative(this.width);\n        this.paintHeight = this.relative(this.height);\n    }\n}\n\nlet instance;\n\nconst getGameMap = (\n    canvas = document.createElement('canvas'),\n    vWidth = MAP_WIDTH,\n    vHeight = MAP_HEIGHT,\n    scale = 1\n) => {\n    if (!instance) {\n        instance = new GameMap(canvas, vWidth, vHeight, scale);\n    }\n    return instance;\n};\n\nexport default getGameMap;\n","import getGameMap from '../framework/GameMap';\n\nexport default class Base {\n    constructor(options) {\n        this.gameMap = getGameMap();\n        this.x = +(options.x || 0);\n        this.y = +(options.y || 0);\n        this.width = options.size || options.width || 0;\n        this.height = options.size || options.height || 0;\n\n        if (!this.width || !this.height) {\n            throw new Error('element size can not be undefined');\n        }\n    }\n\n    prepare() {\n        this.paintX = this.gameMap.view.relativeX(this.x);\n        this.paintY = this.gameMap.view.relativeY(this.y);\n        this.paintWidth = this.gameMap.view.relativeW(this.width);\n        this.paintHeight = this.gameMap.view.relativeH(this.height);\n        const halfWidth = this.paintWidth / 2;\n        const halfHeight = this.paintHeight / 2;\n        this.visible =\n            this.paintX + halfWidth > 0 &&\n            this.paintX - halfWidth < this.gameMap.view.width &&\n            this.paintY + halfHeight > 0 &&\n            this.paintY - halfHeight < this.gameMap.view.height;\n    }\n}\n","import { BASE_ANGLE, SPEED } from '../common/config';\nimport { SnakeHeader } from '../libs/imageStore';\nimport { getAngle } from '../libs/util';\nimport Base from './Base';\n\nexport class Movement {\n    constructor(x, y, speed, angle) {\n        this.x = x;\n        this.y = y;\n        this.speed = speed;\n        this.angle = angle;\n        // return this;\n    }\n}\n\nexport class Snake extends Base {\n    constructor(options) {\n        super(options);\n\n        this.point = 0;\n        this.isSpeedUp = false;\n        this.fillColor = '';\n        this.stopped = false;\n\n        // save snake's movement\n        this.movementQueue = [];\n\n        // max length of queue\n        this.speed = SPEED;\n        this.oldSpeed = SPEED;\n        this.turnSpeed = 0.1;\n        this.vx = 0;\n        this.vy = 0;\n        this.fillColor = options.fillColor || '#fff';\n        this.toAngle = (options.angle || 0) + BASE_ANGLE;\n        this.angle = (options.angle || 0) + BASE_ANGLE;\n        this.length = options.length || 0;\n        this.header = new SnakeHeader(this.gameMap.ctx);\n        this.updateSize();\n        this.velocity();\n    }\n\n    updateSize(added = 0) {\n        this.width += added;\n        this.height += added;\n        this.length += added * 50;\n        // this.turnSpeed -= added / 100;\n        this.header.setSize(this.width, this.height);\n        this.movementQueueLen = Math.ceil(this.length / this.oldSpeed);\n    }\n\n    // move to new position\n    moveTo(nx, ny) {\n        const x = nx - this.x;\n        const y = this.y - ny;\n        const angle = getAngle(x, y);\n\n        const oldAngle = Math.abs(this.toAngle % (Math.PI * 2));\n\n        // number of turns\n        let rounds = Math.floor(this.toAngle / (Math.PI * 2));\n\n        this.toAngle = angle;\n\n        if (oldAngle >= (Math.PI * 3) / 2 && this.toAngle <= Math.PI / 2) {\n            // move from fourth quadrant to first quadrant\n            rounds += 1;\n        } else if (oldAngle <= Math.PI / 2 && this.toAngle >= (Math.PI * 3) / 2) {\n            // move from first quadrant to fourth quadrant\n            rounds -= 1;\n        }\n\n        // calculate the real angle by rounds\n        this.toAngle += rounds * Math.PI * 2;\n    }\n\n    // calculate horizontal speed and vertical speed by angle of snake header\n    velocity() {\n        const angle = this.angle % (Math.PI * 2);\n        const vx = Math.abs(this.speed * Math.sin(angle));\n        const vy = Math.abs(this.speed * Math.cos(angle));\n\n        if (angle < Math.PI / 2) {\n            this.vx = vx;\n            this.vy = -vy;\n        } else if (angle < Math.PI) {\n            this.vx = vx;\n            this.vy = vy;\n        } else if (angle < (Math.PI * 3) / 2) {\n            this.vx = -vx;\n            this.vy = vy;\n        } else {\n            this.vx = -vx;\n            this.vy = -vy;\n        }\n    }\n\n    // turn around\n    turnAround() {\n        const angleDistance = this.toAngle - this.angle;\n\n        if (Math.abs(angleDistance) <= this.turnSpeed) {\n            // reset angle\n            const { toAngle } = this;\n            this.toAngle = BASE_ANGLE + (toAngle % (Math.PI * 2));\n            this.angle = BASE_ANGLE + (toAngle % (Math.PI * 2));\n        } else {\n            this.angle += Math.sign(angleDistance) * this.turnSpeed;\n        }\n    }\n\n    speedUp() {\n        if (this.isSpeedUp) {\n            return;\n        }\n\n        this.isSpeedUp = true;\n        this.oldSpeed = this.speed;\n        this.speed *= 2;\n    }\n\n    speedDown() {\n        if (!this.isSpeedUp) {\n            return;\n        }\n\n        this.isSpeedUp = false;\n        this.speed = this.oldSpeed;\n    }\n\n    // eat food\n    eat(food) {\n        this.point += food.point;\n\n        // add points\n        const added = food.point / 200;\n        this.updateSize(added);\n        return added;\n    }\n\n    // snake action\n    action() {\n        if (this.stopped) {\n            return;\n        }\n\n        // save movement\n        this.movementQueue.push(new Movement(this.x, this.y, this.speed, this.angle));\n\n        if (this.movementQueue.length > this.movementQueueLen) {\n            this.movementQueue.shift();\n        }\n\n        this.turnAround();\n        this.velocity();\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // avoid moving to outside\n        this.gameMap.limit(this);\n    }\n\n    // render snake\n    render() {\n        this.gameMap.ctx.save();\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.moveTo(this.paintX, this.paintY);\n\n        // stroke body\n        let wholeLength = this.length;\n        if (this.movementQueue.length) {\n            let i = this.movementQueue.length - 1;\n            while (i) {\n                const movement = this.movementQueue[i];\n                let { x } = movement;\n                let { y } = movement;\n                if (wholeLength > 0 && wholeLength < movement.speed) {\n                    const lm = this.movementQueue[i + 1] || this;\n                    const ratio = wholeLength / movement.speed;\n                    x = lm.x - (lm.x - x) * ratio;\n                    y = lm.y - (lm.y - y) * ratio;\n                } else if (wholeLength < 0) {\n                    break;\n                }\n\n                i -= 1;\n                wholeLength -= movement.speed;\n                this.gameMap.ctx.lineTo(\n                    this.gameMap.view.relativeX(x),\n                    this.gameMap.view.relativeY(y)\n                );\n            }\n        }\n\n        this.gameMap.ctx.lineCap = 'butt';\n        this.gameMap.ctx.lineJoin = 'round';\n        this.gameMap.ctx.strokeStyle = this.fillColor;\n        this.gameMap.ctx.lineWidth = this.width;\n        // this.gameMap.ctx.shadowOffsetX = Math.round(0.4 * 10);\n        this.gameMap.ctx.shadowOffsetY = Math.round(0.4 * 10);\n        this.gameMap.ctx.shadowBlur = Math.round(0.7 * 10);\n        this.gameMap.ctx.shadowColor = 'gray';\n        this.gameMap.ctx.stroke();\n        this.gameMap.ctx.restore();\n\n        // draw header\n        this.header.render(this.paintX, this.paintY, this.angle);\n    }\n\n    update() {\n        this.prepare();\n        this.action();\n        this.render();\n    }\n}\n","import Base from './Base';\n\nexport default class Food extends Base {\n    constructor(options) {\n        super(options);\n        this.lightDirection = true;\n        this.point = options.point;\n        this.lightSize = this.width / 2;\n    }\n\n    update() {\n        this.prepare();\n        this.action();\n        this.render();\n    }\n\n    action() {\n        if (!this.visible) {\n            return;\n        }\n        const lightSpeed = 1;\n        this.lightSize += this.lightDirection ? lightSpeed : -lightSpeed;\n        // light animate\n        if (this.lightSize > this.width || this.lightSize < this.width / 2) {\n            this.lightDirection = !this.lightDirection;\n        }\n    }\n\n    render() {\n        if (!this.visible) {\n            return;\n        }\n        this.gameMap.ctx.fillStyle = '#fff';\n        // draw light\n        this.gameMap.ctx.globalAlpha = 0.2;\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.arc(\n            this.paintX,\n            this.paintY,\n            (this.lightSize * this.paintWidth) / this.width,\n            0,\n            Math.PI * 2\n        );\n        this.gameMap.ctx.fill();\n\n        this.gameMap.ctx.globalAlpha = 1;\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.arc(this.paintX, this.paintY, this.paintWidth / 2, 0, Math.PI * 2);\n        this.gameMap.ctx.fill();\n    }\n}\n","import {\n    MAP_WIDTH,\n    MAP_HEIGHT,\n    INIT_FOOD_COUNT,\n    SNAKE_IMG_SIZE,\n    SNAKE_LENGTH\n} from './common/config';\nimport { Snake } from './element/Snake';\nimport Food from './element/Food';\nimport getGameMap from './framework/GameMap';\nimport { randomInteger, collision } from './libs/util';\n\nconst raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\nconst canvas = document.getElementById('cas');\n\n// window's width and height\nconst vWidth = window.innerWidth;\nconst vHeight = window.innerHeight;\n\n// game map\n// eslint-disable-next-line import/prefer-default-export\nconst gameMap = getGameMap(canvas, vWidth, vHeight);\n\nlet player;\n\n// record mouse coord\nconst mouseCoords = {};\n\n// snakes map\nconst snakes = new Map();\n\n// save food object\nconst foods = [];\n\n// animation loop\nconst timeout = 0;\nlet time = +new Date();\n\ninitGame(\n    randomInteger(0.5 * 100, MAP_WIDTH - 0.5 * 100),\n    randomInteger(0.5 * 100, MAP_HEIGHT - 0.5 * 100)\n);\n\n/**\n * game init\n */\nfunction initGame(x, y) {\n    // create player\n    player = new Snake({\n        x,\n        y,\n        size: SNAKE_IMG_SIZE,\n        length: SNAKE_LENGTH,\n        angle: Math.random() * 2 * Math.PI,\n        fillColor: '#00FF00'\n    });\n\n    for (let i = 0; i < INIT_FOOD_COUNT; i += 1) {\n        const point = Math.floor(Math.random() * 30 + 50);\n        const size = Math.floor(point / 3);\n\n        foods.push(\n            new Food({\n                size,\n                point,\n                x: randomInteger(size, MAP_WIDTH - size),\n                y: randomInteger(size, MAP_HEIGHT - size)\n            })\n        );\n    }\n\n    binding();\n    animate();\n}\n\nfunction animate() {\n    const newTime = +new Date();\n\n    if (newTime - time > timeout) {\n        time = newTime;\n\n        // update map and player\n        gameMap.update(player, () => {\n            snakes.forEach(snake => {\n                snake.update();\n            });\n\n            player.update();\n\n            foods.forEach(food => {\n                food.update();\n\n                if (!food.visible || !collision(player, food)) {\n                    return;\n                }\n\n                const added = player.eat(food);\n                foods.splice(foods.indexOf(food), 1);\n\n                // limit scale\n                const newScale = gameMap.scale + added / (player.width * 4);\n                if (newScale < 1.4) {\n                    gameMap.setToScale(newScale);\n                }\n            });\n        });\n\n        /* if (mouseCoords.x && mouseCoords.y) {\n            gameMap.ctx.beginPath();\n            gameMap.ctx.moveTo(player.paintX, player.paintY);\n            gameMap.ctx.lineTo(mouseCoords.x, mouseCoords.y);\n            gameMap.ctx.stroke();\n        } */\n    }\n\n    raf(animate);\n}\n\n/**\n * event binding\n */\nfunction binding() {\n    // finger|mouse move event\n    if (navigator.userAgent.match(/(iPhone|iPod|Android|ios)/i)) {\n        window.addEventListener('touchstart', mousemove);\n        window.addEventListener('touchmove', mousemove);\n    } else {\n        // change snake's direction when mouse moving\n        window.addEventListener('mousemove', mousemove);\n\n        // speed up\n        window.addEventListener('mousedown', () => {\n            player.speedUp();\n        });\n\n        // speed down\n        window.addEventListener('mouseup', () => {\n            player.speedDown();\n        });\n    }\n\n    function mousemove(e) {\n        e.preventDefault();\n        if (e.touches) {\n            mouseCoords.x = e.touches[0].pageX;\n            mouseCoords.y = e.touches[0].pageY;\n        } else {\n            const evt = e || window.event;\n            mouseCoords.x = evt.clientX;\n            mouseCoords.y = evt.clientY;\n        }\n        const nx = (mouseCoords.x + gameMap.view.x) * gameMap.scale;\n        const ny = (mouseCoords.y + gameMap.view.y) * gameMap.scale;\n\n        player.moveTo(nx, ny);\n    }\n}\n"],"names":["MAP_WIDTH","MAP_HEIGHT","SPEED","BASE_ANGLE","Math","PI","MAP_RECT_WIDTH","MAP_RECT_HEIGHT","SNAKE_IMG_SIZE","SNAKE_LENGTH","INIT_FOOD_COUNT","randomInteger","min","max","rand","random","floor","collision","dom","dom2","isRect","disX","x","disY","y","dw","width","abs","height","hypot","getAngle","angle","atan","rotatePoint","pivot","point","round","cos","sin","drawPattern","ratio","tileImage","document","createElement","ctx","getContext","colors","mrw","mrh","i","j","cx","cy","w","h","fillStyle","length","fillRect","lineWidth","strokeRect","SnakeHeader","[object Object]","this","leftTop","rightTop","rightBottom","leftBottom","rotateLeftTop","rotateRightTop","rotateRightBottom","rotateLeftBottom","save","beginPath","moveTo","lineTo","closePath","shadowOffsetY","shadowColor","fill","restore","has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","EventEmitter","_events","_eventsCount","create","__proto__","eventNames","events","name","names","call","push","slice","getOwnPropertySymbols","concat","listeners","event","exists","evt","available","l","ee","Array","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","on","listener","removeAllListeners","off","addListener","setMaxListeners","prefixed","module","SmallMap","gameMap","margin","radius","image","initImage","view","mapX","mapY","smallMapWidth","smallMapHeight","smallRectX","smallRectY","arc","strokeStyle","stroke","radio","paintWidth","smallViewX","smallViewY","smallViewW","smallViewH","globalAlpha","drawImage","View","obj","scale","GameMap","canvas","vWidth","vHeight","super","paintSizeReset","smallMap","toScale","val","clearRect","player","callback","setScale","clear","trace","render","el","element","whalf","hhalf","tileWid","relative","tileHei","beginX","beginY","endX","endY","paintHeight","instance","getGameMap","Base","options","size","Error","paintX","relativeX","paintY","relativeY","relativeW","relativeH","halfWidth","halfHeight","visible","Movement","speed","Snake","isSpeedUp","fillColor","stopped","movementQueue","oldSpeed","turnSpeed","vx","vy","toAngle","header","updateSize","velocity","added","setSize","movementQueueLen","ceil","nx","ny","oldAngle","rounds","angleDistance","sign","food","shift","turnAround","limit","wholeLength","movement","lm","lineCap","lineJoin","shadowBlur","prepare","action","Food","lightDirection","lightSize","raf","window","requestAnimationFrame","webkitRequestAnimationFrame","getElementById","innerWidth","innerHeight","mouseCoords","snakes","Map","foods","timeout","time","Date","animate","newTime","update","forEach","snake","eat","splice","indexOf","newScale","setToScale","navigator","userAgent","match","addEventListener","mousemove","speedUp","speedDown","e","preventDefault","touches","pageX","pageY","clientX","clientY","binding","initGame"],"mappings":"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"}