{"version":3,"file":"bundle.js","sources":["../node_modules/stats-js/build/stats.min.js","../src/common/config.js","../node_modules/eventemitter3/index.js","../node_modules/intersects/circle-point.js","../node_modules/intersects/circle-circle.js","../node_modules/intersects/line-circle.js","../node_modules/intersects/circle-line.js","../node_modules/intersects/box-circle.js","../node_modules/intersects/circle-box.js","../node_modules/intersects/line-point.js","../node_modules/intersects/polygon-point.js","../node_modules/intersects/polygon-circle.js","../node_modules/intersects/circle-polygon.js","../node_modules/intersects/ellipse-helper.js","../node_modules/intersects/ellipse-circle.js","../node_modules/intersects/circle-ellipse.js","../node_modules/intersects/line-line.js","../node_modules/intersects/line-polygon.js","../node_modules/intersects/polygon-line.js","../node_modules/intersects/polygon-polygon.js","../node_modules/intersects/polygon-box.js","../node_modules/intersects/ellipse-line.js","../node_modules/intersects/line-ellipse.js","../node_modules/intersects/polygon-ellipse.js","../node_modules/intersects/box-point.js","../node_modules/intersects/box-box.js","../node_modules/intersects/line-box.js","../node_modules/intersects/box-line.js","../node_modules/intersects/box-polygon.js","../node_modules/intersects/ellipse-box.js","../node_modules/intersects/box-ellipse.js","../node_modules/intersects/point-box.js","../node_modules/intersects/point-polygon.js","../node_modules/intersects/point-circle.js","../node_modules/intersects/point-line.js","../node_modules/intersects/ellipse-point.js","../node_modules/intersects/point-ellipse.js","../node_modules/intersects/ellipse-ellipse.js","../node_modules/intersects/ellipse-polygon.js","../node_modules/intersects/index.js","../src/libs/util.js","../src/elements/Base.js","../src/elements/Food.js","../src/elements/Snake.js","../src/libs/imageStore.js","../src/scenes/SmallMap.js","../src/scenes/View.js","../src/scenes/GameMap.js","../src/main.js"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Stats=t()}(this,function(){\"use strict\";var c=function(){var n=0,l=document.createElement(\"div\");function e(e){return l.appendChild(e.dom),e}function t(e){for(var t=0;t<l.children.length;t++)l.children[t].style.display=t===e?\"block\":\"none\";n=e}l.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\",l.addEventListener(\"click\",function(e){e.preventDefault(),t(++n%l.children.length)},!1);var i=(performance||Date).now(),a=i,o=0,f=e(new c.Panel(\"FPS\",\"#0ff\",\"#002\")),r=e(new c.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var d=e(new c.Panel(\"MB\",\"#f08\",\"#201\"));return t(0),{REVISION:16,dom:l,addPanel:e,showPanel:t,begin:function(){i=(performance||Date).now()},end:function(){o++;var e=(performance||Date).now();if(r.update(e-i,200),a+1e3<=e&&(f.update(1e3*o/(e-a),100),a=e,o=0,d)){var t=performance.memory;d.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:l,setMode:t}};return c.Panel=function(n,l,i){var a=1/0,o=0,f=Math.round,r=f(window.devicePixelRatio||1),d=80*r,e=48*r,c=3*r,p=2*r,u=3*r,s=15*r,m=74*r,h=30*r,y=document.createElement(\"canvas\");y.width=d,y.height=e,y.style.cssText=\"width:80px;height:48px\";var v=y.getContext(\"2d\");return v.font=\"bold \"+9*r+\"px Helvetica,Arial,sans-serif\",v.textBaseline=\"top\",v.fillStyle=i,v.fillRect(0,0,d,e),v.fillStyle=l,v.fillText(n,c,p),v.fillRect(u,s,m,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u,s,m,h),{dom:y,update:function(e,t){a=Math.min(a,e),o=Math.max(o,e),v.fillStyle=i,v.globalAlpha=1,v.fillRect(0,0,d,s),v.fillStyle=l,v.fillText(f(e)+\" \"+n+\" (\"+f(a)+\"-\"+f(o)+\")\",c,p),v.drawImage(y,u+r,s,m-r,h,u,s,m-r,h),v.fillRect(u+m-r,s,r,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u+m-r,s,r,f((1-e/t)*h))}}},c});\n","export const MAP_WIDTH = 5000; // map width\nexport const MAP_HEIGHT = 5000; // map height\n\nexport const SPEED = 300; // speed of snake\nexport const BASE_ANGLE = 200 * Math.PI; // base angle of snake\n\nexport const MAP_RECT_WIDTH = 200; // map small rect width\nexport const MAP_RECT_HEIGHT = 200; // map small rect height\nexport const TILE_IMG_WIDTH = 200; // tile image width\nexport const TILE_IMG_HEIGHT = 200; // tile image height\n\nexport const SNAKE_IMG_SIZE = 40; // size of snake's image\nexport const SNAKE_LENGTH = 1; // length of snake\nexport const SNAKE_OFFSET = -6;\n\nexport const INIT_FOOD_COUNT = 1000;\nexport const FOOD_SIZE = 15;\n\nexport const COLORS = new Map([\n    ['purple-lavender', ['#911eb4', '#e6beff']],\n    ['green-mint', ['#3cb44b', '#aaffc3']],\n    ['blue-cian', ['#4363d8', '#42d4f4']],\n    ['navi-teal', ['#000075', '#469990']],\n    ['olive-lime', ['#808000', '#bfef45']],\n    ['yellow-biege', ['#ffe119', '#fffac8']],\n    ['orange-apricot', ['#f58231', '#ffd8b1']],\n    ['red-pink', ['#e6194B', '#fabebe']],\n    ['maroon-brown', ['#800000', '#9A6324']]\n]);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict'\n\n/**\n * circle-point collision\n * @param {number} x1 center of circle\n * @param {number} y1 center of circle\n * @param {radius} r1 radius of circle\n * @param {number} x2 point\n * @param {number} y2 point\n * @return {boolean}\n */\nmodule.exports = function circlePoint(x1, y1, r1, x2, y2)\n{\n    var x = x2 - x1\n    var y = y2 - y1\n    return x * x + y * y <= r1 * r1\n}\n","'use strict'\n\n\n/**\n * circle-circle collision\n * @param {number} x1 center of circle 1\n * @param {number} y1 center of circle 1\n * @param {number} r1 radius of circle 1\n * @param {number} x2 center of circle 2\n * @param {number} y2 center of circle 2\n * @param {number} r2 radius of circle 2\n * @return {boolean}\n */\nmodule.exports = function circleCircle(x1, y1, r1, x2, y2, r2)\n{\n    var x = x1 - x2\n    var y = y2 - y1\n    var radii = r1 + r2\n    return x * x + y * y <= radii * radii\n}\n","'use strict'\n\n/**\n * line-circle collision\n number @param {number} x1 point 1 of line\n number @param {number} y1 point 1 of line\n number @param {number} x2 point 2 of line\n number @param {number} y2 point 2 of line\n number @param {number} xc center of circle\n number @param {number} yc center of circle\n number @param {number} rc radius of circle\n */\nmodule.exports = function lineCircle(x1, y1, x2, y2, xc, yc, rc)\n{\n    var ac = [xc - x1, yc - y1]\n    var ab = [x2 - x1, y2 - y1]\n    var ab2 = dot(ab, ab)\n    var acab = dot(ac, ab)\n    var t = acab / ab2\n    t = (t < 0) ? 0 : t\n    t = (t > 1) ? 1 : t\n    var h = [(ab[0] * t + x1) - xc, (ab[1] * t + y1) - yc]\n    var h2 = dot(h, h)\n    return h2 <= rc * rc\n}\n\nfunction dot(v1, v2)\n{\n    return (v1[0] * v2[0]) + (v1[1] * v2[1])\n}\n","'use strict'\n\nvar lineCircle = require('./line-circle')\n\n/**\n * circle-line collision\n * from http://stackoverflow.com/a/10392860/1955997\n * @param {number} xc center of circle\n * @param {number} yc center of circle\n * @param {radius} rc radius of circle\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n * @return {boolean}\n */\nmodule.exports = function circleLine(xc, yc, rc, x1, y1, x2, y2)\n{\n    return lineCircle(x1, y1, x2, y2, xc, yc, rc)\n}\n","'use strict'\n\n/**\n * box-circle collision\n * @param {number} xb top-left corner of box\n * @param {number} yb top-left corner of box\n * @param {number} wb width of box\n * @param {number} hb height of box\n * @param {number} xc center of circle\n * @param {number} yc center of circle\n * @param {number} rc radius of circle\n */\nmodule.exports = function boxCircle(xb, yb, wb, hb, xc, yc, rc)\n{\n    var hw = wb / 2\n    var hh = hb / 2\n    var distX = Math.abs(xc - (xb + wb / 2))\n    var distY = Math.abs(yc - (yb + hb / 2))\n\n    if (distX > hw + rc || distY > hh + rc)\n    {\n        return false\n    }\n\n    if (distX <= hw || distY <= hh)\n    {\n        return true\n    }\n\n    var x = distX - hw\n    var y = distY - hh\n    return x * x + y * y <= rc * rc\n}\n","'use strict'\n\nvar boxCircle = require('./box-circle')\n\n/**\n * circle-box (axis-oriented rectangle) collision\n * from http://stackoverflow.com/a/402010/1955997\n * @param {number} xc center of circle\n * @param {number} yc center of circle\n * @param {radius} rc radius of circle\n * @param {number} xb top-left corner of rectangle\n * @param {number} yb top-left corner of rectangle\n * @param {number} wb width of rectangle\n * @param {number} hb height of rectangle\n */\nmodule.exports = function circleBox(xc, yc, rc, xb, yb, wb, hb)\n{\n    return boxCircle(xb, yb, wb, hb, xc, yc, rc)\n}\n","'use strict'\n\nfunction distanceSquared(x1, y1, x2, y2)\n{\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n}\n\n/**\n * line-point collision\n * from https://stackoverflow.com/a/17693146/1955997\n * @param {number} x1 first point in line\n * @param {number} y1 first point in line\n * @param {number} x2 second point in line\n * @param {number} y2 second point in line\n * @param {number} xp point\n * @param {number} yp point\n * @param {number} [tolerance=1]\n * @return {boolean}\n */\nmodule.exports = function linePoint(x1, y1, x2, y2, xp, yp, tolerance)\n{\n    tolerance = tolerance || 1\n    return Math.abs(distanceSquared(x1, y1, x2, y2) - (distanceSquared(x1, y1, xp, yp) + distanceSquared(x2, y2, xp, yp))) <= tolerance\n}","'use strict'\n\nconst linePoint = require('./line-point')\n\n/**\n * polygon-point collision\n * based on https://stackoverflow.com/a/17490923/1955997\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n * @param {number} x of point\n * @param {number} y of point\n * @param {number} [tolerance=1] maximum distance of point to polygon's edges that triggers collision (see pointLine)\n */\nmodule.exports = function polygonPoint(points, x, y, tolerance)\n{\n    var length = points.length\n    var c = false\n    var i, j\n    for (i = 0, j = length - 2; i < length; i += 2)\n    {\n        if (((points[i + 1] > y) !== (points[j + 1] > y)) && (x < (points[j] - points[i]) * (y - points[i + 1]) / (points[j + 1] - points[i + 1]) + points[i]))\n        {\n            c = !c\n        }\n        j = i\n    }\n    if (c)\n    {\n        return true\n    }\n    for (i = 0; i < length; i += 2)\n    {\n        var p1x = points[i]\n        var p1y = points[i + 1]\n        var p2x, p2y\n        if (i === length - 2)\n        {\n            p2x = points[0]\n            p2y = points[1]\n        }\n        else\n        {\n            p2x = points[i + 2]\n            p2y = points[i + 3]\n        }\n        if (linePoint(p1x, p1y, p2x, p2y, x, y, tolerance))\n        {\n            return true\n        }\n    }\n    return false\n}\n","var polygonPoint = require('./polygon-point')\nvar lineCircle = require('./line-circle')\n\n/**\n * polygon-circle collision\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n * @param {number} xc center of circle\n * @param {number} yc center of circle\n * @param {number} rc radius of circle\n */\nmodule.exports = function polygonCircle(points, xc, yc, rc)\n{\n    if (polygonPoint(points, xc, yc))\n    {\n        return true\n    }\n    var count = points.length\n    for (var i = 0; i < count - 2; i += 2)\n    {\n        if (lineCircle(points[i], points[i + 1], points[i + 2], points[i + 3], xc, yc, rc))\n        {\n            return true\n        }\n    }\n    return lineCircle(points[0], points[1], points[count - 2], points[count - 1], xc, yc, rc)\n}\n","'use strict'\n\nvar polygonCircle = require('./polygon-circle')\n\n/**\n * circle-polygon collision\n * from http://stackoverflow.com/a/402019/1955997\n * @param {number} xc center of circle\n * @param {number} yc center of circle\n * @param {radius} rc radius of circle\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n */\nmodule.exports = function circlePolygon(xc, yc, rc, points)\n{\n    return polygonCircle(points, xc, yc, rc)\n}\n","// from http://yehar.com/blog/?p=2926\n\nvar MAX_ITERATIONS = 10\nvar innerPolygonCoef, outerPolygonCoef, initialized\n\nfunction initialize()\n{\n    innerPolygonCoef = []\n    outerPolygonCoef = []\n    for (var t = 0; t <= MAX_ITERATIONS; t++)\n    {\n        var numNodes = 4 << t\n        innerPolygonCoef[t] = 0.5 / Math.cos(4 * Math.acos(0) / numNodes)\n        outerPolygonCoef[t] = 0.5 / (Math.cos(2 * Math.acos(0) / numNodes) * Math.cos(2 * Math.acos(0) / numNodes))\n    }\n    initialized = true\n}\n\nfunction iterate(x, y, c0x, c0y, c2x, c2y, rr)\n{\n    for (var t = 1; t <= MAX_ITERATIONS; t++)\n    {\n        var c1x = (c0x + c2x) * innerPolygonCoef[t]\n        var c1y = (c0y + c2y) * innerPolygonCoef[t]\n        var tx = x - c1x\n        var ty = y - c1y\n        if (tx * tx + ty * ty <= rr)\n        {\n            return true\n        }\n        var t2x = c2x - c1x\n        var t2y = c2y - c1y\n        if (tx * t2x + ty * t2y >= 0 && tx * t2x + ty * t2y <= t2x * t2x + t2y * t2y &&\n            (ty * t2x - tx * t2y >= 0 || rr * (t2x * t2x + t2y * t2y) >= (ty * t2x - tx * t2y) * (ty * t2x - tx * t2y)))\n        {\n            return true\n        }\n        var t0x = c0x - c1x\n        var t0y = c0y - c1y\n        if (tx * t0x + ty * t0y >= 0 && tx * t0x + ty * t0y <= t0x * t0x + t0y * t0y &&\n            (ty * t0x - tx * t0y <= 0 || rr * (t0x * t0x + t0y * t0y) >= (ty * t0x - tx * t0y) * (ty * t0x - tx * t0y)))\n        {\n            return true\n        }\n        var c3x = (c0x + c1x) * outerPolygonCoef[t]\n        var c3y = (c0y + c1y) * outerPolygonCoef[t]\n        if ((c3x - x) * (c3x - x) + (c3y - y) * (c3y - y) < rr)\n        {\n            c2x = c1x\n            c2y = c1y\n            continue\n        }\n        var c4x = c1x - c3x + c1x\n        var c4y = c1y - c3y + c1y\n        if ((c4x - x) * (c4x - x) + (c4y - y) * (c4y - y) < rr)\n        {\n            c0x = c1x\n            c0y = c1y\n            continue\n        }\n        var t3x = c3x - c1x\n        var t3y = c3y - c1y\n        if (ty * t3x - tx * t3y <= 0 || rr * (t3x * t3x + t3y * t3y) > (ty * t3x - tx * t3y) * (ty * t3x - tx * t3y))\n        {\n            if (tx * t3x + ty * t3y > 0)\n            {\n                if (Math.abs(tx * t3x + ty * t3y) <= t3x * t3x + t3y * t3y || (x - c3x) * (c0x - c3x) + (y - c3y) * (c0y - c3y) >= 0)\n                {\n                    c2x = c1x\n                    c2y = c1y\n                    continue\n                }\n            } else if (-(tx * t3x + ty * t3y) <= t3x * t3x + t3y * t3y || (x - c4x) * (c2x - c4x) + (y - c4y) * (c2y - c4y) >= 0)\n            {\n                c0x = c1x\n                c0y = c1y\n                continue\n            }\n        }\n        return false\n    }\n    return false // Out of iterations so it is unsure if there was a collision. But have to return something.\n}\n\n// Test for collision between an ellipse of horizontal radius w0 and vertical radius h0 at (x0, y0) and\n// an ellipse of horizontal radius w1 and vertical radius h1 at (x1, y1)\nfunction ellipseEllipse(x0, y0, w0, h0, x1, y1, w1, h1)\n{\n    if (!initialized)\n    {\n        initialize()\n    }\n\n    var x = Math.abs(x1 - x0) * h1\n    var y = Math.abs(y1 - y0) * w1\n    w0 *= h1\n    h0 *= w1\n    var r = w1 * h1\n\n    if (x * x + (h0 - y) * (h0 - y) <= r * r || (w0 - x) * (w0 - x) + y * y <= r * r || x * h0 + y * w0 <= w0 * h0\n        || ((x * h0 + y * w0 - w0 * h0) * (x * h0 + y * w0 - w0 * h0) <= r * r * (w0 * w0 + h0 * h0) && x * w0 - y * h0 >= -h0 * h0 && x * w0 - y * h0 <= w0 * w0))\n    {\n        return true\n    }\n    else\n    {\n        if ((x - w0) * (x - w0) + (y - h0) * (y - h0) <= r * r || (x <= w0 && y - r <= h0) || (y <= h0 && x - r <= w0))\n        {\n            return iterate(x, y, w0, 0, 0, h0, r * r)\n        }\n        return false\n    }\n}\n\n// Test for collision between an ellipse of horizontal radius w and vertical radius h at (x0, y0) and\n// a circle of radius r at (x1, y1)\nfunction ellipseCircle(x0, y0, w, h, x1, y1, r)\n{\n    if (!initialized)\n    {\n        initialize()\n    }\n    var x = Math.abs(x1 - x0)\n    var y = Math.abs(y1 - y0)\n\n    if (x * x + (h - y) * (h - y) <= r * r || (w - x) * (w - x) + y * y <= r * r || x * h + y * w <= w * h\n        || ((x * h + y * w - w * h) * (x * h + y * w - w * h) <= r * r * (w * w + h * h) && x * w - y * h >= -h * h && x * w - y * h <= w * w))\n    {\n        return true\n    }\n    else\n    {\n        if ((x - w) * (x - w) + (y - h) * (y - h) <= r * r || (x <= w && y - r <= h) || (y <= h && x - r <= w))\n        {\n            return iterate(x, y, w, 0, 0, h, r * r)\n        }\n        return false\n    }\n}\n\nmodule.exports = {\n    ellipseCircle: ellipseCircle,\n    ellipseEllipse: ellipseEllipse\n}","var ellipseHelper = require('./ellipse-helper')\n\n/**\n * ellipse-circle collision\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {number} rex radius-x of ellipse\n * @param {number} rey radius-y of ellipse\n * @param {number} xc center of circle\n * @param {number} yc center of circle\n * @param {number} rc radius of circle\n * @return {boolean}\n */\nmodule.exports = function ellipseCircle(xe, ye, rex, rey, xc, yc, rc)\n{\n    return ellipseHelper.ellipseCircle(xe, ye, rex, rey, xc, yc, rc)\n}\n","var ellipseCircle = require('./ellipse-circle')\n\n/**\n * circle-ellipse collision\n * @param {number} xc center of circle\n * @param {number} yc center of circle\n * @param {number} rc radius of circle\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {number} rex radius-x of ellipse\n * @param {number} rey radius-y of ellipse\n * @return {boolean}\n */\nmodule.exports = function circleEllipse(xc, yc, rc, xe, ye, rex, rey)\n{\n    return ellipseCircle(xe, ye, rex, rey, xc, yc, rc)\n}\n","'use strict'\n\n/**\n * line-line collision\n * from http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect\n * @param {number} x1 first point in line 1\n * @param {number} y1 first point in line 1\n * @param {number} x2 second point in line 1\n * @param {number} y2 second point in line 1\n * @param {number} x3 first point in line 2\n * @param {number} y3 first point in line 2\n * @param {number} x4 second point in line 2\n * @param {number} y4 second point in line 2\n * @return {boolean}\n */\nmodule.exports = function lineLine(x1, y1, x2, y2, x3, y3, x4, y4)\n{\n    var s1_x = x2 - x1\n    var s1_y = y2 - y1\n    var s2_x = x4 - x3\n    var s2_y = y4 - y3\n    var s = (-s1_y * (x1 - x3) + s1_x * (y1 - y3)) / (-s2_x * s1_y + s1_x * s2_y)\n    var t = (s2_x * (y1 - y3) - s2_y * (x1 - x3)) / (-s2_x * s1_y + s1_x * s2_y)\n    return s >= 0 && s <= 1 && t >= 0 && t <= 1\n}\n","var polygonPoint = require('./polygon-point')\nvar lineLine = require('./line-line')\n\n/**\n * line-polygon collision\n @param {number} x1 point 1 of line\n @param {number} y1 point 1 of line\n @param {number} x2 point 2 of line\n @param {number} y2 point 2 of line\n @param {number[]} points of polygon\n @param {tolerance=1} maximum distance of point to polygon's edges that triggers collision (see pointLine)\n */\nmodule.exports = function linePolygon(x1, y1, x2, y2, points, tolerance)\n{\n    var length = points.length\n\n    // check if first point is inside the shape (this covers if the line is completely enclosed by the shape)\n    if (polygonPoint(points, x1, y1, tolerance))\n    {\n        return true\n    }\n\n    // check for intersections for all of the sides\n    for (var i = 0; i < length; i += 2)\n    {\n        var j = (i + 2) % length\n        if (lineLine(x1, y1, x2, y2, points[i], points[i + 1], points[j], points[j + 1]))\n        {\n            return true\n        }\n    }\n    return false\n}\n","var linePolygon = require('./line-polygon')\n\n/**\n * polygon-line collisions\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n * @param {number} x1 first point in line\n * @param {number} y1 first point in line\n * @param {number} x2 second point in line\n * @param {number} y2 second point in line\n * @param {tolerance=1} maximum distance of point to polygon's edges that triggers collision (see pointLine)\n * @return {boolean}\n */\nmodule.exports = function polygonLine(points, x1, y1, x2, y2, tolerance)\n{\n    return linePolygon(x1, y1, x2, y2, points, tolerance)\n}\n","'use strict'\n\n/**\n * polygon-polygon collision\n * based on http://stackoverflow.com/questions/10962379/how-to-check-intersection-between-2-rotated-rectangles\n * @param {number[]} points1 [x1, y1, x2, y2, ... xn, yn] of first polygon\n * @param {number[]} points2 [x1, y1, x2, y2, ... xn, yn] of second polygon\n * @return {boolean}\n */\nmodule.exports = function polygonPolygon(points1, points2)\n{\n    var a = points1\n    var b = points2\n    var polygons = [a, b]\n    var minA, maxA, projected, minB, maxB, j\n    for (var i = 0; i < polygons.length; i++)\n    {\n        var polygon = polygons[i]\n        for (var i1 = 0; i1 < polygon.length; i1 += 2)\n        {\n            var i2 = (i1 + 2) % polygon.length\n            var normal = { x: polygon[i2 + 1] - polygon[i1 + 1], y: polygon[i1] - polygon[i2] }\n            minA = maxA = null\n            for (j = 0; j < a.length; j += 2)\n            {\n                projected = normal.x * a[j] + normal.y * a[j + 1]\n                if (minA === null || projected < minA)\n                {\n                    minA = projected\n                }\n                if (maxA === null || projected > maxA)\n                {\n                    maxA = projected\n                }\n            }\n            minB = maxB = null\n            for (j = 0; j < b.length; j += 2)\n            {\n                projected = normal.x * b[j] + normal.y * b[j + 1]\n                if (minB === null || projected < minB)\n                {\n                    minB = projected\n                }\n                if (maxB === null || projected > maxB)\n                {\n                    maxB = projected\n                }\n            }\n            if (maxA < minB || maxB < minA)\n            {\n                return false\n            }\n        }\n    }\n    return true\n}\n","'use strict'\n\nvar polygonPolygon = require('./polygon-polygon')\n\n/**\n * polygon-box collision\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n * @param {number} x of box\n * @param {number} y of box\n * @param {number} w of box\n * @param {number} h of box\n */\nmodule.exports = function polygonBox(points, x, y, w, h)\n{\n    var points2 = [x, y, x + w, y, x + w, y + h, x, y + h]\n    return polygonPolygon(points, points2)\n}\n","/**\n * ellipse-line collision\n * adapted from http://csharphelper.com/blog/2017/08/calculate-where-a-line-segment-and-an-ellipse-intersect-in-c/\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {number} rex radius-x of ellipse\n * @param {number} rey radius-y of ellipse\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n */\nmodule.exports = function ellipseLine(xe, ye, rex, rey, x1, y1, x2, y2)\n{\n    x1 -= xe\n    x2 -= xe\n    y1 -= ye\n    y2 -= ye\n\n    var A = Math.pow(x2 - x1, 2) / rex / rex + Math.pow(y2 - y1, 2) / rey / rey\n    var B = 2 * x1 * (x2 - x1) / rex / rex + 2 * y1 * (y2 - y1) / rey / rey\n    var C = x1 * x1 / rex / rex + y1 * y1 / rey / rey - 1\n    var D = B * B - 4 * A * C\n    if (D === 0)\n    {\n        var t = -B / 2 / A\n        return t >= 0 && t <= 1\n    }\n    else if (D > 0)\n    {\n        var sqrt = Math.sqrt(D)\n        var t1 = (-B + sqrt) / 2 / A\n        var t2 = (-B - sqrt) / 2 / A\n        return (t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)\n    }\n    else\n    {\n        return false\n    }\n}","var ellipseLine = require('./ellipse-line')\n\n/**\n * line-ellipse collision\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {number} rx radius-x of ellipse\n * @param {number} ry radius-y of ellipse\n */\nmodule.exports = function lineEllipse(x1, y1, x2, y2, xe, ye, rex, rey)\n{\n    return ellipseLine(xe, ye, rex, rey, x1, y1, x2, y2)\n}","var polygonPoint = require('./polygon-point')\nvar lineEllipse = require('./line-ellipse')\n\n/**\n * polygon-ellipse collision\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {number} rex radius-x of ellipse\n * @param {number} rey radius-y of ellipse\n */\nmodule.exports = function polygonEllipse(points, xe, ye, rex, rey)\n{\n    if (polygonPoint(points, xe, ye))\n    {\n        return true\n    }\n    var count = points.length\n    for (var i = 0; i < count - 2; i += 2)\n    {\n        if (lineEllipse(points[i], points[i + 1], points[i + 2], points[i + 3], xe, ye, rex, rey))\n        {\n            return true\n        }\n    }\n    return lineEllipse(points[0], points[1], points[count - 2], points[count - 1], xe, ye, rex, rey)\n}","'use strict'\n\n/**\n * box-point collision\n * @param {number} x1 top-left corner of box\n * @param {number} y1 top-left corner of box\n * @param {number} w1 width of box\n * @param {number} h1 height of box\n * @param {number} x2 of point\n * @param {number} y2 of point\n * @return {boolean}\n */\nmodule.exports = function boxPoint(x1, y1, w1, h1, x2, y2)\n{\n    return x2 >= x1 && x2 <= x1 + w1 && y2 >= y1 && y2 <= y1 + h1\n}\n","'use strict'\n\n/**\n * box-box collision\n * @param {number} x1 top-left corner of first box\n * @param {number} y1 top-left corner of first box\n * @param {number} w1 width of first box\n * @param {number} h1 height of first box\n * @param {number} x2 top-left corner of second box\n * @param {number} y2 top-left corner of second box\n * @param {number} w2 width of second box\n * @param {number} h2 height of second box\n */\nmodule.exports = function boxBox(x1, y1, w1, h1, x2, y2, w2, h2)\n{\n    return x1 < x2 + w2 && x1 + w1 > x2 && y1 < y2 + h2 && y1 + h1 > y2\n}\n","'use strict'\n\nvar boxPoint = require('./box-point')\nvar lineLine = require('./line-line')\n\n/**\n * line-box collision\n number @param {number} x1 point 1 of line\n number @param {number} y1 point 1 of line\n number @param {number} x2 point 2 of line\n number @param {number} y2 point 2 of line\n number @param {number} xb top-left of box\n number @param {number} yb top-left of box\n number @param {number} wb width of box\n number @param {number} hb height of box\n */\nmodule.exports = function lineBox(x1, y1, x2, y2, xb, yb, wb, hb)\n{\n    if (boxPoint(xb, yb, wb, hb, x1, y1) || boxPoint(xb, yb, wb, hb, x2, y2))\n    {\n        return true\n    }\n    return lineLine(x1, y1, x2, y2, xb, yb, xb + wb, yb) ||\n        lineLine(x1, y1, x2, y2, xb + wb, yb, xb + wb, yb + hb) ||\n        lineLine(x1, y1, x2, y2, xb, yb + hb, xb + wb, yb + hb) ||\n        lineLine(x1, y1, x2, y2, xb, yb, xb, yb + hb)\n}\n","'use strict'\n\nvar lineBox = require('./line-box')\n\n/**\n * box-line collision\n * @param {number} xb top-left corner of box\n * @param {number} yb top-left corner of box\n * @param {number} wb width of box\n * @param {number} hb height of box\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n */\nmodule.exports = function boxLine(xb, yb, wb, hb, x1, y1, x2, y2)\n{\n    return lineBox(x1, y1, x2, y2, xb, yb, wb, hb)\n}\n","'use strict'\n\nvar polygonBox = require('./polygon-box')\n\n/**\n * box-polygon collision\n * @param {number} xb top-left corner of box\n * @param {number} yb top-left corner of box\n * @param {number} wb width of box\n * @param {number} hb height of box\n * @param {number[]} points of polygon\n */\nmodule.exports = function boxPolygon(xb, yb, wb, hb, points)\n{\n    return polygonBox(points, xb, yb, wb, hb)\n}\n","var ellipseLine = require('./ellipse-line')\nvar boxPoint = require('./box-point')\n\n/**\n * ellipse-box (axis-oriented rectangle) collision\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {radius} rex radius-x of ellipse\n * @param {radius} rey radius-y of ellipse\n * @param {number} xb top-left corner of box\n * @param {number} yb top-left corner of box\n * @param {number} wb width of box\n * @param {number} hb height of box\n */\nmodule.exports = function ellipseBox(xe, ye, rex, rey, xb, yb, wb, hb)\n{\n    return boxPoint(xb, yb, wb, hb, xe, ye) ||\n        ellipseLine(xe, ye, rex, rey, xb, yb, xb + wb, yb) ||\n        ellipseLine(xe, ye, rex, rey, xb, yb + hb, xb + wb, yb + hb) ||\n        ellipseLine(xe, ye, rex, rey, xb, yb, xb, yb + hb) ||\n        ellipseLine(xe, ye, rex, rey, xb + wb, yb, xb + wb, yb + hb)\n}","var ellipseBox = require('./ellipse-box')\n\n/**\n * box-ellipse (axis-oriented rectangle) collision\n * @param {number} xb top-left corner of rectangle\n * @param {number} yb top-left corner of rectangle\n * @param {number} wb width of rectangle\n * @param {number} hb height of rectangle\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {radius} rex radius-x of ellipse\n * @param {radius} rey radius-y of ellipse\n */\nmodule.exports = function boxEllipse(xb, yb, wb, hb, xe, ye, rex, rey)\n{\n    return ellipseBox(xe, ye, rex, rey, xb, yb, wb, hb)\n}","'use strict'\n\nvar boxPoint = require('./box-point')\n\n/**\n * point-box collision\n * @param {number} x1 point\n * @param {number} y1 point\n * @param {number} xb top-left corner of box\n * @param {number} yb top-left corner of box\n * @param {number} wb width of box\n * @param {number} hb height of box\n * @return {boolean}\n */\nmodule.exports = function pointBox(x1, y1, xb, yb, wb, hb)\n{\n    return boxPoint(xb, yb, wb, hb, x1, y1)\n}\n","'use strict'\n\nvar polygonPoint = require('./polygon-point')\n\n/**\n * polygon-point collision\n * based on https://stackoverflow.com/a/17490923/1955997\n * @param {number} x1\n * @param {number} y1\n * @param {number[]} points\n * @param {number} [tolerance=1] maximum distance of point to polygon's edges that triggers collision (see pointLine)\n * @return {boolean}\n */\nmodule.exports = function pointPolygon(x1, y1, points, tolerance)\n{\n    return polygonPoint(points, x1, y1, tolerance)\n}\n","'use strict'\n\nvar circlePoint = require('./circle-point')\n\nmodule.exports = function pointCircle(x1, y1, xc, yc, rc)\n{\n    return circlePoint(xc, yc, rc, x1, y1)\n}\n","'use strict'\n\nvar linePoint = require('./line-point')\n\n/**\n * point-line collision\n * @param {number} xp point\n * @param {number} yp point\n * @param {number} x1 first point in line\n * @param {number} y1 first point in line\n * @param {number} x2 second point in line\n * @param {number} y2 second point in line\n * @return {boolean}\n */\nmodule.exports = function pointLine(xp, yp, x1, y1, x2, y2)\n{\n    return linePoint(x1, y1, x2, y2, xp, yp)\n}\n","/**\n * ellipse-point collision\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {radius} rex radius-x of ellipse\n * @param {radius} rey radius-y of ellipse\n * @param {number} x1 point\n * @param {number} y1 point\n * @return {boolean}\n */\nmodule.exports = function ellipsePoint(xe, ye, rex, rey, x1, y1)\n{\n    var x = Math.pow(x1 - xe, 2) / (rex * rex)\n    var y = Math.pow(y1 - ye, 2) / (rey * rey)\n    return x + y <= 1\n}\n","var ellipsePoint = require('./ellipse-point')\n\n/**\n * point-ellipse collision\n * @param {number} x1 point\n * @param {number} y1 point\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {radius} rex radius-x of ellipse\n * @param {radius} rey radius-y of ellipse\n * @return {boolean}\n */\nmodule.exports = function pointEllipse(x1, y1, xe, ye, rex, rey)\n{\n    return ellipsePoint(xe, ye, rex, rey, x1, y1)\n}","var ellipseHelper = require('./ellipse-helper')\n\n/**\n * ellipse-ellipse collision\n * @param {number} x1 center of ellipse 1\n * @param {number} y1 center of ellipse 1\n * @param {number} r1x radius-x of ellipse 1\n * @param {number} r1y radius-y of ellipse 1\n * @param {number} x2 center of ellipse 2\n * @param {number} y2 center of ellipse 2\n * @param {number} r2x radius of ellipse 2\n * @param {number} r2y radius of ellipse 2\n * @return {boolean}\n */\nmodule.exports = function ellipseEllipse(x1, y1, r1x, r1y, x2, y2, r2x, r2y)\n{\n    return ellipseHelper.ellipseEllipse(x1, y1, r1x, r1y, x2, y2, r2x, r2y)\n}\n","var polygonEllipse = require('./polygon-ellipse')\n\n/**\n * ellipse-polygon collision\n * @param {number} xe center of ellipse\n * @param {number} ye center of ellipse\n * @param {number} rex radius-x of ellipse\n * @param {number} rey radius-y of ellipse\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n */\nmodule.exports = function ellipsePolygon(xe, ye, rex, rey, points)\n{\n    return polygonEllipse(points, xe, ye, rex, rey)\n}","module.exports = {\n    circlePoint: require('./circle-point'),\n    circleCircle: require('./circle-circle'),\n    circleLine: require('./circle-line'),\n    circleBox: require('./circle-box'),\n    circlePolygon: require('./circle-polygon'),\n    circleEllipse: require('./circle-ellipse'),\n\n    polygonPoint: require('./polygon-point'),\n    polygonLine: require('./polygon-line'),\n    polygonPolygon: require('./polygon-polygon'),\n    polygonBox: require('./polygon-box'),\n    polygonCircle: require('./polygon-circle'),\n    polygonEllipse: require('./polygon-ellipse'),\n\n    boxPoint: require('./box-point'),\n    boxBox: require('./box-box'),\n    boxLine: require('./box-line'),\n    boxPolygon: require('./box-polygon'),\n    boxCircle: require('./box-circle'),\n    boxEllipse: require('./box-ellipse'),\n\n    pointBox: require('./point-box'),\n    pointPolygon: require('./point-polygon'),\n    pointCircle: require('./point-circle'),\n    pointLine: require('./point-line'),\n    pointEllipse: require('./point-ellipse'),\n\n    lineLine: require('./line-line'),\n    lineBox: require('./line-box'),\n    linePolygon: require('./line-polygon'),\n    lineCircle: require('./line-circle'),\n    linePoint: require('./line-point'),\n    lineEllipse: require('./line-ellipse'),\n\n    ellipsePoint: require('./ellipse-point'),\n    ellipseLine: require('./ellipse-line'),\n    ellipseBox: require('./ellipse-box'),\n    ellipseCircle: require('./ellipse-circle'),\n    ellipseEllipse: require('./ellipse-ellipse'),\n    ellipsePolygon: require('./ellipse-polygon')\n}","export const randomInteger = (min, max) => {\n    let rand = min + Math.random() * (max + 1 - min);\n    rand = Math.floor(rand);\n    return rand;\n};\n\nexport const collision = (dom, dom2, isRect) => {\n    const disX = dom.x - dom2.x;\n    const disY = dom.y - dom2.y;\n    const dw = dom.width + dom2.width;\n\n    if (Math.abs(disX) > dw || Math.abs(disY) > dom.height + dom2.height) {\n        return false;\n    }\n\n    return isRect ? true : Math.hypot(disX, disY) < dw / 2;\n};\n\nexport const getAngle = (x, y) => {\n    let angle = Math.atan(Math.abs(x / y));\n\n    // calculate angle, value is 0-360\n    if (x > 0 && y < 0) {\n        angle = Math.PI - angle;\n    } else if (x < 0 && y < 0) {\n        angle = Math.PI + angle;\n    } else if (x < 0 && y > 0) {\n        angle = Math.PI * 2 - angle;\n    }\n\n    return angle;\n};\n\nexport const rotatePoint = (pivotX, pivotY, pointX, pointY, angle) => {\n    // Rotate clockwise, angle in radians\n    const x = Math.cos(angle) * (pointX - pivotX) - Math.sin(angle) * (pointY - pivotY) + pivotX;\n\n    const y = Math.sin(angle) * (pointX - pivotX) + Math.cos(angle) * (pointY - pivotY) + pivotY;\n\n    return {\n        x,\n        y\n    };\n};\n\nexport const getFoodAngle = (cx, cy, ex, ey) => {\n    const dy = ey - cy;\n    const dx = ex - cx;\n    let theta = Math.atan2(dy, dx);\n    theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n    if (theta < 0) {\n        theta = theta * -1 + 180; // Turn into 0-360\n    }\n    return theta;\n};\nexport const getBotAngle = (dx, dy) => {\n    let theta = Math.atan2(dy, dx);\n    theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n    if (theta < 0) {\n        theta = theta * -1 + 180; // Turn into 0-360\n    }\n    return theta;\n};\n\nexport const velocityFromAngle = (angle, speed) => {\n    let vx = Math.abs(speed * Math.sin(angle));\n    let vy = Math.abs(speed * Math.cos(angle));\n\n    if (angle < Math.PI / 2) {\n        vy *= -1;\n    } else if (angle < Math.PI) {\n        vx *= 1;\n        vy *= 1;\n    } else if (angle < (Math.PI * 3) / 2) {\n        vx *= -1;\n    } else {\n        vx *= -1;\n        vy *= -1;\n    }\n    return {\n        vx,\n        vy\n    };\n};\n","export default class Base {\n    constructor(gameMap, options) {\n        this.gameMap = gameMap;\n        this.x = +(options.x || 0);\n        this.y = +(options.y || 0);\n        this.width = options.size || options.width || 0;\n        this.height = options.size || options.height || 0;\n        this.id = options.id || '';\n        if (!this.width || !this.height) {\n            throw new Error('element size can not be undefined');\n        }\n    }\n\n    prepare() {\n        this.paintX = this.gameMap.view.relativeX(this.x);\n        this.paintY = this.gameMap.view.relativeY(this.y);\n        this.paintWidth = this.gameMap.view.relativeW(this.width);\n        this.paintHeight = this.gameMap.view.relativeH(this.height);\n        const halfWidth = this.paintWidth / 2;\n        const halfHeight = this.paintHeight / 2;\n        this.visible =\n            this.paintX + halfWidth > 0 &&\n            this.paintX - halfWidth < this.gameMap.view.width &&\n            this.paintY + halfHeight > 0 &&\n            this.paintY - halfHeight < this.gameMap.view.height;\n    }\n}\n","import Base from './Base';\n\nexport default class Food extends Base {\n    constructor(gameMap, options) {\n        super(gameMap, options);\n        this.lightDirection = true;\n        this.point = options.point;\n        this.lightSize = this.width / 2;\n        this.onField = options.onField;\n    }\n\n    update() {\n        this.action();\n    }\n\n    action() {\n        if (!this.visible) {\n            return;\n        }\n        const lightSpeed = 1;\n        this.lightSize += this.lightDirection ? lightSpeed : -lightSpeed;\n        // light animate\n        if (this.lightSize > this.width || this.lightSize < this.width / 2) {\n            this.lightDirection = !this.lightDirection;\n        }\n    }\n\n    render() {\n        this.prepare();\n        if (!this.visible) {\n            return;\n        }\n        this.gameMap.ctx.save();\n        this.gameMap.ctx.fillStyle = '#f032e6';\n        // draw light\n        this.gameMap.ctx.globalAlpha = 0.2;\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.arc(\n            this.paintX,\n            this.paintY,\n            (this.lightSize * this.paintWidth) / this.width,\n            0,\n            Math.PI * 2\n        );\n        this.gameMap.ctx.fill();\n\n        this.gameMap.ctx.globalAlpha = 1;\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.arc(\n            this.paintX,\n            this.paintY,\n            Math.floor(this.paintWidth / 2),\n            0,\n            Math.PI * 2\n        );\n        this.gameMap.ctx.fill();\n        this.gameMap.ctx.restore();\n    }\n}\n","import {\n    polygonPolygon\n} from 'intersects';\nimport {\n    BASE_ANGLE,\n    SPEED,\n    SNAKE_OFFSET\n} from '../common/config';\nimport {\n    getAngle,\n    rotatePoint,\n    velocityFromAngle\n} from '../libs/util';\nimport Base from './Base';\n\nclass Movement {\n    constructor(x, y, speed, dt, angle) {\n        this.x = x;\n        this.y = y;\n        this.speed = speed;\n        this.angle = angle;\n        this.dt = dt;\n        // return this;\n    }\n}\n\nclass Collider {\n    constructor(cX, cY, lX, lY, rX, rY) {\n        this.cX = cX;\n        this.cY = cY;\n        this.lX = lX;\n        this.lY = lY;\n        this.rX = rX;\n        this.rY = rY;\n    }\n\n    set(cX, cY, lX, lY, rX, rY) {\n        this.cX = cX;\n        this.cY = cY;\n        this.lX = lX;\n        this.lY = lY;\n        this.rX = rX;\n        this.rY = rY;\n    }\n}\n\nexport default class Snake extends Base {\n    constructor(gameMap, options) {\n        super(gameMap, options);\n\n        this.point = 0;\n        this.isSpeedUp = false;\n        this.status = 'idle';\n        this.color = options.color;\n        this.stopped = false;\n        this.head = [];\n        // Угол зрения червяка\n        this.visionAngle = 170;\n        this.closestSnakeDistance = 5000;\n        this.closestFoodDistance = 5000;\n        this.closestSnakeID = '';\n        this.foodID = '';\n        this.closestSnake = {};\n        this.closestFood = {};\n        this.seeSnake = false;\n        this.collidedV = false;\n        this.collidedH = false;\n        // save snake's movement\n        this.movementQueue = [];\n        this.colliderIdx = 0;\n        this.colliders = [];\n\n        // max length of queue\n        this.speed = SPEED;\n        this.oldSpeed = SPEED;\n        this.turnSpeed = 0.2;\n        this.vx = 0;\n        this.vy = 0;\n        this.toAngle = (options.angle || 0) + BASE_ANGLE;\n        this.angle = (options.angle || 0) + BASE_ANGLE;\n        this.length = options.length || 0;\n        this.isPlayer = options.isPlayer || false;\n        this.updateSize();\n        this.velocity();\n        this.calcHead();\n    }\n\n    resetSnake() {\n        this.point = 0;\n        this.isSpeedUp = false;\n        this.status = 'idle';\n        this.stopped = false;\n        this.foodsEated = new Map();\n        this.head = [];\n        // Угол зрения червяка\n        this.visionAngle = 170;\n        this.closestSnakeDistance = 5000;\n        this.closestFoodDistance = 5000;\n        this.closestSnakeID = '';\n        this.foodID = '';\n        this.closestSnake = {};\n        this.closestFood = {};\n        this.seeSnake = false;\n        this.collidedV = false;\n        this.collidedH = false;\n        // save snake's movement\n        this.movementQueue = [];\n        this.colliderIdx = 0;\n\n        // max length of queue\n        this.speed = SPEED;\n        this.oldSpeed = SPEED;\n        this.turnSpeed = 1;\n        this.vx = 0;\n        this.vy = 0;\n    }\n\n    setStatus(status) {\n        this.status = status;\n    }\n\n    zeroFood() {\n        this.closestFoodDistance = 50000;\n        if (this.status === 'eating' || this.status === 'seefood') this.status = 'idle';\n    }\n\n    zeroSnake() {\n        this.closestSnakeDistance = 50000;\n        this.closestSnakeID = '';\n    }\n\n    setFood(distance, foodX, foodY, id) {\n        this.closestFoodDistance = distance;\n        this.closestFood.x = foodX;\n        this.closestFood.y = foodY;\n        this.foodID = id;\n        this.status = 'seefood';\n    }\n\n    setSnake(distance, snakeX, snakeY, snakeID) {\n        this.closestSnakeDistance = distance;\n        this.closestSnake.x = snakeX;\n        this.closestSnake.y = snakeY;\n        this.closestSnakeID = snakeID;\n    }\n\n    updateSize(added = 0) {\n        this.width += added;\n        this.height += added;\n        this.length += added * 100;\n        this.speed += added;\n        // this.turnSpeed -= added / 100;\n        this.movementQueueLen = Math.ceil(this.length / (this.oldSpeed * this.dt));\n    }\n\n    directionTo(angle) {\n        const oldAngle = Math.abs(this.toAngle % (Math.PI * 2));\n\n        // number of turns\n        let rounds = Math.floor(this.toAngle / (Math.PI * 2));\n\n        this.toAngle = angle;\n\n        if (oldAngle >= (Math.PI * 3) / 2 && this.toAngle <= Math.PI / 2) {\n            // move from fourth quadrant to first quadrant\n            rounds += 1;\n        } else if (oldAngle <= Math.PI / 2 && this.toAngle >= (Math.PI * 3) / 2) {\n            // move from first quadrant to fourth quadrant\n            rounds -= 1;\n        }\n\n        // calculate the real angle by rounds\n        this.toAngle += rounds * Math.PI * 2;\n    }\n\n    // move to new position\n    moveTo(nx, ny, fromPlayer = false) {\n        if (fromPlayer && (this.collidedV || this.collidedH)) return;\n        const x = nx - this.x;\n        const y = this.y - ny;\n        const angle = getAngle(x, y);\n\n        this.directionTo(angle);\n    }\n\n    // calculate horizontal speed and vertical speed by angle of snake header\n    velocity() {\n        const angle = this.angle % (Math.PI * 2);\n        const vx = Math.abs(this.speed * Math.sin(angle));\n        const vy = Math.abs(this.speed * Math.cos(angle));\n\n        if (angle < Math.PI / 2) {\n            this.vx = vx;\n            this.vy = -vy;\n        } else if (angle < Math.PI) {\n            this.vx = vx;\n            this.vy = vy;\n        } else if (angle < (Math.PI * 3) / 2) {\n            this.vx = -vx;\n            this.vy = vy;\n        } else {\n            this.vx = -vx;\n            this.vy = -vy;\n        }\n    }\n\n    // turn around\n    turnAround(dt) {\n        const angleDistance = this.toAngle - this.angle;\n\n        if (Math.abs(angleDistance) <= this.turnSpeed * this.gameMap.scale) {\n            // reset angle\n            const {\n                toAngle\n            } = this;\n            this.toAngle = BASE_ANGLE + (toAngle % (Math.PI * 2));\n            this.angle = BASE_ANGLE + (toAngle % (Math.PI * 2));\n        } else {\n            this.angle += Math.sign(angleDistance) * this.turnSpeed * this.gameMap.scale;\n        }\n    }\n\n    speedUp() {\n        if (this.isSpeedUp) {\n            return;\n        }\n\n        this.isSpeedUp = true;\n        this.oldSpeed = this.speed;\n        this.speed *= 2;\n    }\n\n    speedDown() {\n        if (!this.isSpeedUp) {\n            return;\n        }\n\n        this.isSpeedUp = false;\n        this.speed = this.oldSpeed;\n    }\n\n    // eat food\n    eat(idx, food) {\n        this.point += food.point;\n\n        // add points\n        const added = food.point / 15;\n        this.updateSize(added);\n    }\n\n    // snake action\n    action() {\n        this.colliderIdx = 0;\n        if (this.stopped) {\n            return;\n        }\n\n        // save movement\n        this.movementQueue.push(new Movement(this.x, this.y, this.speed, this.dt, this.angle));\n\n        if (this.movementQueue.length > this.movementQueueLen) {\n            this.movementQueue.shift();\n        }\n\n        this.turnAround();\n        this.velocity();\n        this.x += this.vx * this.dt;\n        this.y += this.vy * this.dt;\n        this.calcHead();\n\n        let wholeLength = this.length;\n        if (this.movementQueue.length) {\n            let i = this.movementQueue.length - 1;\n            while (i) {\n                const movement = this.movementQueue[i];\n                let {\n                    x,\n                    y,\n                    angle,\n                    dt,\n                    speed\n                } = movement;\n                if (wholeLength > 0 && wholeLength < speed * dt) {\n                    const lm = this.movementQueue[i + 1] || this;\n                    const ratio = wholeLength / (speed * dt);\n                    x = lm.x - (lm.x - x) * ratio;\n                    y = lm.y - (lm.y - y) * ratio;\n                    // speed = lm.speed - (lm.speed - speed) * ratio;\n                    // dt = lm.dt - (lm.dt - dt) * ratio;\n                    // angle = lm.angle - (lm.angle - angle) * ratio;\n                } else if (wholeLength < 0) {\n                    break;\n                }\n\n                i -= 1;\n                wholeLength -= speed * dt;\n                const rotateRight = rotatePoint(x, y, x + 0.5 * this.width, y, angle);\n                const rotateLeft = rotatePoint(x, y, x - 0.5 * this.width, y, angle);\n                this.addCollider(x, y, rotateLeft.x, rotateLeft.y, rotateRight.x, rotateRight.y);\n            }\n        }\n\n        // this.gameMap.view.trace(this);\n        if (this.x > 2 * this.width && this.x < this.gameMap.width - 2 * this.width)\n            this.collidedH = false;\n        if (this.y > 2 * this.height && this.y < this.gameMap.height - 2 * this.height)\n            this.collidedV = false;\n\n        this.gameMap.bounds.forEach((bound, id) => {\n            if (polygonPolygon(this.head, bound)) {\n                const vec = velocityFromAngle(this.angle % (Math.PI * 2), this.speed);\n                switch (id) {\n                    case 'UP':\n                        if (!this.collideV) {\n                            this.moveTo(this.x + vec.vx, this.y - vec.vy);\n                            this.collidedV = true;\n                        }\n                        break;\n                    case 'LEFT':\n                        if (!this.collideH) {\n                            this.moveTo(this.x - vec.vx, this.y + vec.vy);\n                            this.collidedH = true;\n                        }\n                        break;\n                    case 'RIGHT':\n                        if (!this.collideH) {\n                            this.moveTo(this.x - vec.vx, this.y + vec.vy);\n                            this.collidedH = true;\n                        }\n                        break;\n                    default:\n                        if (!this.collideV) {\n                            this.moveTo(this.x + vec.vx, this.y - vec.vy);\n                            this.collidedV = true;\n                        }\n                }\n            }\n        });\n\n        // avoid moving to outside\n        // this.gameMap.limit(this);\n    }\n\n    // render snake\n    render() {\n        this.prepare();\n        const offset = SNAKE_OFFSET / this.gameMap.scale;\n        this.gameMap.ctx.save();\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.moveTo(this.paintX, this.paintY);\n\n        for (let i = 2; i < this.colliderIdx; i += 1) {\n            this.gameMap.ctx.lineTo(\n                this.gameMap.view.relativeX(this.colliders[i].cX),\n                this.gameMap.view.relativeY(this.colliders[i].cY)\n            );\n        }\n\n        this.gameMap.ctx.lineCap = 'butt';\n        this.gameMap.ctx.lineJoin = 'round';\n        [, this.gameMap.ctx.strokeStyle] = this.color;\n        this.gameMap.ctx.lineWidth = this.paintWidth;\n        // this.gameMap.ctx.shadowOffsetX = Math.round(0.4 * 10);\n        this.gameMap.ctx.shadowOffsetY = Math.round(0.4 * 10) / this.gameMap.scale;\n        this.gameMap.ctx.shadowBlur = Math.round(0.7 * 10) / this.gameMap.scale;\n        this.gameMap.ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        this.gameMap.ctx.stroke();\n        this.gameMap.ctx.restore();\n\n        /* while (this.collisionPointsX.length) {\n            const x = this.collisionPointsX.pop();\n            const y = this.collisionPointsY.pop();\n            const angle = this.collisionAngle.pop();\n            const rotateRight = rotatePoint(x, y, x + 0.5 * this.width, y, angle);\n            const rotateLeft = rotatePoint(x, y, x - 0.5 * this.width, y, angle);\n            this.gameMap.ctx.save();\n            this.gameMap.ctx.beginPath();\n            this.gameMap.ctx.moveTo(\n                this.gameMap.view.relativeX(rotateLeft.x),\n                this.gameMap.view.relativeY(rotateLeft.y)\n            );\n            this.gameMap.ctx.lineTo(\n                this.gameMap.view.relativeX(rotateRight.x),\n                this.gameMap.view.relativeY(rotateRight.y)\n            );\n\n            this.gameMap.ctx.strokeStyle = '#000';\n            this.gameMap.ctx.lineWidth = 2;\n            this.gameMap.ctx.stroke();\n            this.gameMap.ctx.restore();\n        } */\n\n        // draw header\n        let rotateLeftTop = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX - 0.5 * this.paintWidth,\n            this.paintY - this.paintHeight,\n            this.angle\n        );\n        let rotateRightTop = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX + 0.5 * this.paintWidth,\n            this.paintY - this.paintHeight,\n            this.angle\n        );\n        let rotateRightBottom = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX + 0.5 * this.paintWidth,\n            this.paintY,\n            this.angle\n        );\n        let rotateLeftBottom = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX - 0.5 * this.paintWidth,\n            this.paintY,\n            this.angle\n        );\n        this.gameMap.ctx.save();\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.moveTo(rotateLeftTop.x, rotateLeftTop.y);\n        this.gameMap.ctx.lineTo(rotateRightTop.x, rotateRightTop.y);\n        this.gameMap.ctx.lineTo(rotateRightBottom.x, rotateRightBottom.y);\n        this.gameMap.ctx.lineTo(rotateLeftBottom.x, rotateLeftBottom.y);\n        this.gameMap.ctx.closePath();\n        [this.gameMap.ctx.fillStyle] = this.color;\n        this.gameMap.ctx.shadowOffsetY = Math.round(0.4 * 10) / this.gameMap.scale;\n        this.gameMap.ctx.shadowBlur = Math.round(0.7 * 10) / this.gameMap.scale;\n        this.gameMap.ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        this.gameMap.ctx.fill();\n        this.gameMap.ctx.restore();\n        this.gameMap.ctx.save();\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.moveTo(rotateLeftTop.x, rotateLeftTop.y + offset);\n        this.gameMap.ctx.lineTo(rotateRightTop.x, rotateRightTop.y + offset);\n        this.gameMap.ctx.lineTo(rotateRightBottom.x, rotateRightBottom.y + offset);\n        this.gameMap.ctx.lineTo(rotateLeftBottom.x, rotateLeftBottom.y + offset);\n        this.gameMap.ctx.closePath();\n        [this.gameMap.ctx.fillStyle] = this.color;\n        this.gameMap.ctx.fill();\n\n        this.gameMap.ctx.restore();\n        rotateLeftTop = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX - 0.3 * this.paintWidth,\n            this.paintY - 0.8 * this.paintHeight,\n            this.angle\n        );\n        rotateRightTop = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX + 0.3 * this.paintWidth,\n            this.paintY - 0.8 * this.paintHeight,\n            this.angle\n        );\n        rotateRightBottom = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX + 0.3 * this.paintWidth,\n            this.paintY - 0.2 * this.paintHeight,\n            this.angle\n        );\n        rotateLeftBottom = rotatePoint(\n            this.paintX,\n            this.paintY,\n            this.paintX - 0.3 * this.paintWidth,\n            this.paintY - 0.2 * this.paintHeight,\n            this.angle\n        );\n\n        this.gameMap.ctx.save();\n        this.gameMap.ctx.beginPath();\n        this.gameMap.ctx.moveTo(rotateLeftTop.x, rotateLeftTop.y + offset);\n        this.gameMap.ctx.lineTo(rotateRightTop.x, rotateRightTop.y + offset);\n        this.gameMap.ctx.lineTo(rotateRightBottom.x, rotateRightBottom.y + offset);\n        this.gameMap.ctx.lineTo(rotateLeftBottom.x, rotateLeftBottom.y + offset);\n        this.gameMap.ctx.closePath();\n        [, this.gameMap.ctx.fillStyle] = this.color;\n        this.gameMap.ctx.fill();\n        this.gameMap.ctx.restore();\n    }\n\n    update(dt) {\n        this.dt = dt;\n        this.action();\n    }\n\n    calcHead() {\n        const rotateLeftTop = rotatePoint(\n            this.x,\n            this.y,\n            this.x - 0.5 * this.width,\n            this.y - this.height,\n            this.angle\n        );\n        const rotateRightTop = rotatePoint(\n            this.x,\n            this.y,\n            this.x + 0.5 * this.width,\n            this.y - this.height,\n            this.angle\n        );\n        const rotateRightBottom = rotatePoint(\n            this.x,\n            this.y,\n            this.x + 0.5 * this.width,\n            this.y,\n            this.angle\n        );\n        const rotateLeftBottom = rotatePoint(\n            this.x,\n            this.y,\n            this.x - 0.5 * this.width,\n            this.y,\n            this.angle\n        );\n\n        this.head[0] = rotateLeftTop.x;\n        this.head[1] = rotateLeftTop.y;\n        this.head[2] = rotateRightTop.x;\n        this.head[3] = rotateRightTop.y;\n        this.head[4] = rotateRightBottom.x;\n        this.head[5] = rotateRightBottom.y;\n        this.head[6] = rotateLeftBottom.x;\n        this.head[7] = rotateLeftBottom.y;\n        this.addCollider(\n            0.5 * (rotateLeftTop.x + rotateRightTop.x),\n            0.5 * (rotateLeftTop.y + rotateRightTop.y),\n            rotateLeftTop.x,\n            rotateLeftTop.y,\n            rotateRightTop.x,\n            rotateRightTop.y\n        );\n        this.addCollider(\n            this.x,\n            this.y,\n            rotateLeftBottom.x,\n            rotateLeftBottom.y,\n            rotateRightBottom.x,\n            rotateRightBottom.y\n        );\n    }\n\n    addCollider(cX, cY, lX, lY, rX, rY) {\n        if (this.colliderIdx === this.colliders.length) {\n            this.colliders.push(new Collider(cX, cY, lX, lY, rX, rY));\n        } else {\n            this.colliders[this.colliderIdx].set(cX, cY, lX, lY, rX, rY);\n        }\n        this.colliderIdx += 1;\n    }\n}\n","import { MAP_RECT_HEIGHT, MAP_RECT_WIDTH } from '../common/config';\n\nexport const drawPattern = (width, height, ratio = 1) => {\n    const tileImage = document.createElement('canvas');\n    tileImage.width = width * ratio;\n    tileImage.height = height * ratio;\n    const ctx = tileImage.getContext('2d');\n    const colors = ['#eee', '#aaa'];\n    const mrw = MAP_RECT_WIDTH / ratio;\n    const mrh = MAP_RECT_HEIGHT / ratio;\n    for (let x = 0, i = 0; x <= width; x += mrw, i += 1) {\n        for (let y = 0, j = 0; y <= height; y += mrh, j += 1) {\n            const cx = width * ratio - x;\n            const cy = height * ratio - y;\n            const w = cx < mrw ? cx : mrw;\n            const h = cy < mrh ? cy : mrh;\n            ctx.fillStyle = colors[(i + j) % colors.length];\n            ctx.fillRect(x, y, w, h);\n        }\n    }\n    ctx.lineWidth = 3;\n    ctx.strokeRect(0, 0, width * ratio, height * ratio);\n    return tileImage;\n};\n","export default class SmallMap {\n    constructor(gameMap, margin, radius) {\n        this.gameMap = gameMap;\n        this.margin = margin;\n        this.radius = radius;\n        this.image = document.createElement('canvas');\n\n        this.initImage();\n    }\n\n    initImage() {\n        this.image.width = this.radius * 2;\n        this.image.height = this.radius * 2;\n        this.x = this.gameMap.view.width - this.radius * 2 - this.margin;\n        this.y = this.gameMap.view.height - this.radius * 2 - this.margin;\n        this.mapX = this.x + this.radius / 2;\n        this.mapY = this.y + this.radius / 2;\n        const ctx = this.image.getContext('2d');\n\n        this.smallMapWidth =\n            this.gameMap.width > this.gameMap.height\n                ? this.radius\n                : (this.gameMap.width * this.radius) / this.gameMap.height;\n        this.smallMapHeight =\n            this.gameMap.width > this.gameMap.height\n                ? (this.gameMap.height * this.radius) / this.gameMap.width\n                : this.radius;\n\n        const smallRectX = this.radius - this.smallMapWidth / 2;\n        const smallRectY = this.radius - this.smallMapHeight / 2;\n\n        // draw background\n        ctx.save();\n        ctx.beginPath();\n        ctx.arc(this.radius, this.radius, this.radius - 1, 0, Math.PI * 2);\n        ctx.fillStyle = '#000';\n        ctx.fill();\n\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#fff';\n        ctx.stroke();\n\n        // draw map\n        ctx.fillStyle = '#ccc';\n        ctx.fillRect(smallRectX, smallRectY, this.smallMapWidth, this.smallMapHeight);\n        ctx.restore();\n    }\n\n    resize() {\n        this.x = this.gameMap.view.width - this.radius * 2 - this.margin;\n        this.y = this.gameMap.view.height - this.radius * 2 - this.margin;\n        this.mapX = this.x + this.radius / 2;\n        this.mapY = this.y + this.radius / 2;\n    }\n\n    render() {\n        // relative ratio\n        const radio = this.smallMapWidth / this.gameMap.paintWidth;\n        const globalRadio = this.smallMapWidth / this.gameMap.width;\n        const { ctx } = this.gameMap;\n\n        // area and position of window\n        const smallViewX = this.gameMap.view.x * radio + this.mapX;\n        const smallViewY = this.gameMap.view.y * radio + this.mapY;\n        const smallViewW = this.gameMap.view.width * radio;\n        const smallViewH = this.gameMap.view.height * radio;\n\n        ctx.save();\n        ctx.globalAlpha = 0.8;\n        ctx.drawImage(this.image, this.x, this.y);\n\n        // draw window\n        ctx.strokeStyle = '#fff';\n        ctx.strokeRect(smallViewX, smallViewY, smallViewW, smallViewH);\n\n        this.gameMap.units.forEach(unit => {\n            const smallX = unit.x * globalRadio + this.mapX;\n            const smallY = unit.y * globalRadio + this.mapY;\n            ctx.fillStyle = '#f00';\n            ctx.fillRect(smallX - 2, smallY - 2, 4, 4);\n        });\n\n        /* ctx.fillStyle = '#f00';\n        ctx.fillRect(smallViewX + smallViewW / 2 - 2, smallViewY + smallViewH / 2 - 2, 4, 4);\n        */\n\n        ctx.restore();\n    }\n}\n","export default class View {\n    constructor(gameMap, width, height, x = 0, y = 0) {\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n        this.gameMap = gameMap;\n    }\n\n    trace(x, y) {\n        this.x = x / this.gameMap.scale - this.width / 2;\n        this.y = y / this.gameMap.scale - this.height / 2;\n    }\n\n    absoluteX(x) {\n        return (x + this.x) * this.gameMap.scale;\n    }\n\n    absoluteY(y) {\n        return (y + this.y) * this.gameMap.scale;\n    }\n\n    relativeX(x) {\n        return x / this.gameMap.scale - this.x;\n    }\n\n    relativeY(y) {\n        return y / this.gameMap.scale - this.y;\n    }\n\n    relativeW(width) {\n        return width / this.gameMap.scale;\n    }\n\n    relativeH(height) {\n        return height / this.gameMap.scale;\n    }\n}\n","import EventEmitter from 'eventemitter3';\nimport { polygonCircle, polygonPolygon } from 'intersects';\nimport {\n    MAP_HEIGHT,\n    MAP_RECT_HEIGHT,\n    MAP_RECT_WIDTH,\n    MAP_WIDTH,\n    SNAKE_IMG_SIZE,\n    SNAKE_LENGTH,\n    COLORS,\n    FOOD_SIZE\n} from '../common/config';\nimport { randomInteger, getFoodAngle, getBotAngle, getAngle } from '../libs/util';\nimport Food from '../elements/Food';\nimport Snake from '../elements/Snake';\nimport { drawPattern } from '../libs/imageStore';\nimport SmallMap from './SmallMap';\nimport View from './View';\n\n// Map class\nexport default class GameMap extends EventEmitter {\n    constructor(\n        canvas = document.createElement('canvas'),\n        vWidth = MAP_WIDTH,\n        vHeight = MAP_HEIGHT,\n        scale = 1\n    ) {\n        super();\n        this.canvas = canvas;\n        this.width = MAP_WIDTH;\n        this.height = MAP_HEIGHT;\n        this.bounds = new Map([\n            ['UP', [-50, 0, MAP_WIDTH + 50, 0, MAP_WIDTH + 50, -50, -50, -50]],\n            ['LEFT', [0, 0, 0, MAP_HEIGHT, -50, MAP_HEIGHT, -50, 0]],\n            [\n                'RIGHT',\n                [MAP_WIDTH, 0, MAP_WIDTH + 50, 0, MAP_WIDTH + 50, MAP_HEIGHT, MAP_WIDTH, MAP_HEIGHT]\n            ],\n            [\n                'DOWN',\n                [\n                    -50,\n                    MAP_HEIGHT,\n                    -50,\n                    MAP_HEIGHT + 50,\n                    MAP_WIDTH + 50,\n                    MAP_HEIGHT + 50,\n                    MAP_WIDTH + 50,\n                    MAP_HEIGHT\n                ]\n            ]\n        ]);\n        this.aviableColors = [];\n        COLORS.forEach(color => this.aviableColors.push(color));\n        this.vWidth = vWidth;\n        this.vHeight = vHeight;\n        this.scale = scale;\n        this.scaled = false;\n        this.canvas.width = vWidth;\n        this.canvas.height = vHeight;\n        this.ctx = this.canvas.getContext('2d');\n        this.paintSizeReset();\n        this.tileImage = drawPattern(MAP_RECT_WIDTH * 8, MAP_RECT_HEIGHT * 8);\n        this.view = new View(this, vWidth, vHeight);\n        this.smallMap = new SmallMap(this, 30, 50);\n        this.units = [];\n        this.foods = [];\n        this.foodEatedPool = [];\n    }\n\n    resize(width, height) {\n        this.vWidth = width;\n        this.vHeight = height;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.view.width = width;\n        this.view.height = height;\n        this.smallMap.resize();\n    }\n\n    initUnits(numUnits, playerID) {\n        // Инициируем игрока\n        this.player = new Snake(this, {\n            x: randomInteger(0.5 * 100, MAP_WIDTH - 0.5 * 100),\n            y: randomInteger(0.5 * 100, MAP_HEIGHT - 0.5 * 100),\n            size: SNAKE_IMG_SIZE,\n            length: SNAKE_LENGTH,\n            angle: Math.random() * 2 * Math.PI,\n            id: playerID,\n            color: this.aviableColors.splice(randomInteger(0, this.aviableColors.length - 1), 1)[0],\n            isPlayer: true\n        });\n        this.units.push(this.player);\n        // Инициируем остальных червяков\n        for (let i = numUnits - 1; i; i -= 1) {\n            this.units.push(\n                new Snake(this, {\n                    x: randomInteger(0.5 * 100, MAP_WIDTH - 0.5 * 100),\n                    y: randomInteger(0.5 * 100, MAP_HEIGHT - 0.5 * 100),\n                    size: SNAKE_IMG_SIZE,\n                    length: SNAKE_LENGTH,\n                    angle: Math.random() * 2 * Math.PI,\n                    color: this.aviableColors.splice(\n                        randomInteger(0, this.aviableColors.length - 1),\n                        1\n                    )[0],\n                    id: `unit${i}`\n                })\n            );\n        }\n    }\n\n    // Инициируем еду\n    initFoods(numFoods) {\n        this.foodsOnFields = numFoods;\n        for (let i = 0; i < numFoods; i += 1) {\n            this.foods.push(\n                new Food(this, {\n                    size: FOOD_SIZE,\n                    point: 1,\n                    x: randomInteger(FOOD_SIZE, MAP_WIDTH - FOOD_SIZE),\n                    y: randomInteger(FOOD_SIZE, MAP_HEIGHT - FOOD_SIZE),\n                    id: i,\n                    onField: true\n                })\n            );\n        }\n    }\n\n    // set scale\n    setScale(scale) {\n        if (this.scale === scale) {\n            return;\n        }\n\n        this.scale = scale < 1 ? 1 : scale;\n        this.paintSizeReset();\n        this.emit('scale_changed');\n    }\n\n    // set toScale for creating animate\n    setToScale(scale) {\n        this.toScale = scale;\n    }\n\n    // relative to scale\n    relative(val) {\n        return val / this.scale;\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.view.width, this.view.height);\n    }\n\n    update(dt) {\n        if (this.scaled && this.scale < 2.0) {\n            this.setToScale(this.scale + 0.1);\n        } else if (this.scale > 1.0 && !this.scaled) {\n            this.setToScale(this.scale - 0.1);\n        }\n        if (this.toScale && this.scale !== this.toScale) {\n            this.setScale(this.toScale);\n        }\n        this.updateFood();\n        this.updateUnits(dt);\n        this.view.trace(this.player.x, this.player.y);\n        this.clear();\n        this.render();\n        this.renderFood();\n        this.renderUnits();\n        this.addFood();\n        this.units.forEach(unit => {\n            const i = window.devicePixelRatio;\n            const s = Math.floor((0.8 * unit.width) / (i * this.scale));\n            this.ctx.save();\n            this.ctx.translate(unit.paintX, unit.paintY);\n            this.ctx.font = 'bold '.concat(s, 'px Quicksand');\n            this.ctx.textAlign = 'center';\n            this.ctx.textBaseline = 'bottom';\n            [this.ctx.fillStyle] = unit.color;\n            this.ctx.fillText(unit.id, 0, -Math.floor((unit.width + 10) / (i * this.scale)));\n            this.ctx.restore();\n        });\n        this.smallMap.render();\n\n        this.ctx.save();\n        this.ctx.translate(100, 100);\n        /// this.ctx.moveTo(-12, -12);\n        this.ctx.beginPath();\n        this.ctx.lineTo(10, -12);\n        this.ctx.lineTo(14, -6);\n        this.ctx.lineTo(12, 4);\n        this.ctx.lineTo(8, 6);\n        this.ctx.lineTo(6, 12);\n        this.ctx.lineTo(0, 14);\n        this.ctx.lineTo(-6, 12);\n        this.ctx.lineTo(-8, 6);\n        this.ctx.lineTo(-12, 4);\n        this.ctx.lineTo(-14, -6);\n        this.ctx.lineTo(-10, -12);\n        this.ctx.closePath();\n        this.ctx.arc(-6, -2, 4, 0, 2 * Math.PI, !0);\n        this.ctx.closePath();\n        this.ctx.arc(6, -2, 4, 0, 2 * Math.PI, !0);\n        this.ctx.closePath();\n        this.ctx.moveTo(0, 2);\n        this.ctx.lineTo(-4, 6);\n        this.ctx.lineTo(0, 8);\n        this.ctx.lineTo(4, 6);\n        this.ctx.closePath();\n        this.ctx.fillStyle = 'red';\n        // this.ctx.lineWidth = 1;\n        this.ctx.fill();\n        this.ctx.restore();\n        this.checkCollisions();\n    }\n\n    // render map\n    render() {\n        const { view } = this;\n        const tileWid = this.relative(this.tileImage.width);\n        const tileHei = this.relative(this.tileImage.height);\n        const beginX = view.x < 0 ? -view.x : -view.x % tileWid;\n        const beginY = view.y < 0 ? -view.y : -view.y % tileHei;\n        const endX =\n            view.x + view.width > this.paintWidth\n                ? this.paintWidth - view.x\n                : beginX + view.width + tileWid;\n        const endY =\n            view.y + view.height > this.paintHeight\n                ? this.paintHeight - view.y\n                : beginY + view.height + tileHei;\n\n        for (let x = beginX; x <= endX; x += tileWid) {\n            for (let y = beginY; y <= endY; y += tileHei) {\n                const cx = endX - x;\n                const cy = endY - y;\n                const w = cx < tileWid ? cx : tileWid;\n                const h = cy < tileHei ? cy : tileHei;\n                this.ctx.drawImage(\n                    this.tileImage,\n                    0,\n                    0,\n                    w * this.scale,\n                    h * this.scale,\n                    x,\n                    y,\n                    w,\n                    h\n                );\n            }\n        }\n    }\n\n    paintSizeReset() {\n        this.paintWidth = this.relative(this.width);\n        this.paintHeight = this.relative(this.height);\n    }\n\n    checkCollisions() {\n        this.units.forEach(unit0 => {\n            unit0.zeroSnake();\n            this.units.forEach(unit => {\n                if (unit0.id !== unit.id) {\n                    for (let i = 1; i < unit.colliderIdx; i += 1) {\n                        if (\n                            polygonPolygon(unit0.head, [\n                                unit.colliders[i].lX,\n                                unit.colliders[i].lY,\n                                unit.colliders[i].rX,\n                                unit.colliders[i].rY,\n                                unit.colliders[i - 1].rX,\n                                unit.colliders[i - 1].rY,\n                                unit.colliders[i - 1].lX,\n                                unit.colliders[i - 1].lY\n                            ])\n                        ) {\n                            console.log('BAAM!!!');\n                            break;\n                        } else if (unit0.id !== this.player.id) {\n                            const distanceX = Math.round(unit.colliders[i].cX - unit0.x);\n                            const distanceY = Math.round(unit.colliders[i].cY - unit0.y);\n                            const distance = Math.abs(distanceX) + Math.abs(distanceY);\n                            const angle = getAngle(\n                                unit0.x - unit.colliders[i].cX,\n                                unit.colliders[i].cY - unit0.y\n                            );\n                            const unitAngle = getAngle(unit0.vx, unit0.vy);\n                            if (\n                                angle <= unit.angle + (Math.PI * unit0.visionAngle) / 360 &&\n                                angle >= unit.angle - (Math.PI * unit0.visionAngle) / 360\n                            ) {\n                                if (distance < unit0.closestSnakeDistance) {\n                                    unit0.setSnake(\n                                        distance,\n                                        unit.colliders[i].cX,\n                                        unit.colliders[i].cY,\n                                        unit.id\n                                    );\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        });\n    }\n\n    updateUnits(dt) {\n        this.units.forEach(unit => {\n            if (unit.id !== this.player.id) {\n                if (unit.closestSnakeDistance < 3 * unit.width) {\n                    unit.zeroFood();\n                    const angleSnake = getAngle(\n                        unit.x - unit.closestSnake.x,\n                        unit.y - unit.closestSnake.y\n                    );\n                    unit.moveTo(unit.x - unit.closestSnake.x, unit.y - unit.closestSnake.y);\n                }\n                if (\n                    (unit.status === 'eating' || unit.status === 'seefood') &&\n                    !this.foods[unit.foodID].onField\n                )\n                    unit.zeroFood();\n                if (unit.status === 'seefood') {\n                    unit.setStatus('eating');\n                    unit.moveTo(unit.closestFood.x, unit.closestFood.y);\n                }\n            }\n            unit.update(dt);\n        });\n    }\n\n    updateFood() {\n        for (let i = this.foods.length - 1; i > 0; i -= 1) {\n            const food = this.foods[i];\n            if (this.foods[i].onField) {\n                food.update();\n                this.units.forEach(unit => {\n                    if (polygonCircle(unit.head, food.x, food.y, food.width * 0.5)) {\n                        unit.eat(food.id, food);\n                        // eslint-disable-next-line no-param-reassign\n                        food.onField = false;\n                        this.foodsOnFields -= 1;\n                        this.foodEatedPool.push(i);\n                        unit.zeroFood();\n                    } else if (unit.status === 'idle' || unit.status === 'seefood') {\n                        // Ищем наименьшее расстояние от червяка до еды\n                        const distanceX = Math.round(food.x - unit.x);\n                        const distanceY = Math.round(food.y - unit.y);\n                        const distance = Math.abs(distanceX) + Math.abs(distanceY);\n                        const angle = getAngle(food.x - unit.x, food.y - unit.y);\n                        const unitAngle = getAngle(unit.vx, unit.vy);\n                        if (\n                            angle <= unitAngle + (Math.PI * unit.visionAngle) / 360 &&\n                            angle >= unitAngle - (Math.PI * unit.visionAngle) / 360\n                        ) {\n                            if (distance < unit.closestFoodDistance) {\n                                unit.setFood(distance, food.x, food.y, i);\n                            }\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    addFood() {\n        if (this.foodsOnFields < 500) {\n            const food = this.foodEatedPool.pop();\n            if (food) {\n                this.foodsOnFields += 1;\n                this.foods[food].onField = true;\n                this.foods[food].x = randomInteger(FOOD_SIZE, MAP_WIDTH - FOOD_SIZE);\n                this.foods[food].y = randomInteger(FOOD_SIZE, MAP_HEIGHT - FOOD_SIZE);\n            }\n        }\n    }\n\n    renderFood() {\n        for (let i = 0; i < this.foods.length; i += 1) {\n            if (this.foods[i].onField) {\n                this.foods[i].render();\n            }\n        }\n    }\n\n    renderUnits() {\n        for (let i = 0; i < this.units.length; i += 1) {\n            this.units[i].render();\n        }\n    }\n}\n","import Stats from 'stats-js';\nimport { INIT_FOOD_COUNT } from './common/config';\nimport GameMap from './scenes/GameMap';\n\nconst stats = new Stats();\nstats.showPanel(0);\ndocument.body.appendChild(stats.dom);\nconst raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\nconst timestamp = () => {\n    return window.performance && window.performance.now\n        ? window.performance.now()\n        : new Date().getTime();\n};\nconst canvas = document.getElementById('cas');\n\n// window's width and height\nconst vWidth = window.innerWidth;\nconst vHeight = window.innerHeight;\n\n// game map\nconst gameMap = new GameMap(canvas, vWidth, vHeight);\n\nconst mouseCoords = {};\n\n// animation loop\nlet now;\nlet dt = 0;\nlet last = timestamp();\nconst step = 1 / 60;\n\nlet player;\n\ninitGame();\n\n/**\n * game init\n */\nfunction initGame() {\n    gameMap.initUnits(6, 'player');\n    [player] = gameMap.units.filter(unit => unit.id === 'player');\n    gameMap.initFoods(INIT_FOOD_COUNT);\n    binding();\n    animate();\n}\n\nfunction animate() {\n    stats.begin();\n    now = timestamp();\n    dt = Math.min(step, (now - last) / 1000);\n    gameMap.update(dt);\n    stats.end();\n    last = now;\n    raf(animate);\n}\n\n/**\n * event binding\n */\nfunction binding() {\n    window.addEventListener('resize', () => {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        gameMap.resize(width, height);\n    });\n    // finger|mouse move event\n    if (navigator.userAgent.match(/(iPhone|iPod|Android|ios)/i)) {\n        window.addEventListener('touchstart', mousemove);\n        window.addEventListener('touchmove', mousemove);\n    } else {\n        // change snake's direction when mouse moving\n        window.addEventListener('mousemove', mousemove);\n\n        // speed up\n        window.addEventListener('mousedown', () => {\n            player.speedUp();\n            gameMap.scaled = true;\n        });\n\n        // speed down\n        window.addEventListener('mouseup', () => {\n            player.speedDown();\n            gameMap.scaled = false;\n        });\n    }\n\n    function mousemove(e) {\n        e.preventDefault();\n        if (e.touches) {\n            mouseCoords.x = e.touches[0].pageX;\n            mouseCoords.y = e.touches[0].pageY;\n        } else {\n            const evt = e || window.event;\n            mouseCoords.x = evt.clientX;\n            mouseCoords.y = evt.clientY;\n        }\n        const nx = (mouseCoords.x + gameMap.view.x) * gameMap.scale;\n        const ny = (mouseCoords.y + gameMap.view.y) * gameMap.scale;\n\n        player.moveTo(nx, ny, true);\n    }\n}\n"],"names":["this","ellipseCircle","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","polygonPolygon","EventEmitter","polygonCircle","Stats"],"mappings":"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"}